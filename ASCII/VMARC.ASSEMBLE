VMARC    TITLE  '--  CMS file compaction utility  --  V1.2.0'           00001000
         MACRO                                                          00002000
&LABEL   ICALL &RTN                                                     00003000
.********************************************************************** 00004000
.*             Call to internal subroutine.                           * 00005000
.********************************************************************** 00006000
.GEN     AIF   ('&RTN'(1,1) EQ '(').REG                                 00007000
&LABEL   L     15,=A(&RTN)         Set up subroutine base.              00008000
         AGO   .CALL                                                    00009000
.REG     ANOP                                                           00010000
&LABEL   LR    15,&RTN(1)          Set up subroutine base.              00011000
.CALL    BALR  14,15               Call the subroutine.                 00012000
         MEND                                                           00013000
         MACRO                                                          00014000
&LABEL   IENTER &SA=A                                                   00015000
.********************************************************************** 00016000
.*             Internal subroutine entry sequence.                    * 00017000
.********************************************************************** 00018000
         GBLC  &VMASA                                                   00019000
&VMASA   SETC  'WRKSUBS&SA'                                             00020000
&LABEL   STM   0,15,&VMASA         Remember caller's registers.         00021000
         LR    RSUBBASE,15                                              00022000
         USING &SYSECT,RSUBBASE    Define local addressibility.         00023000
         MEND                                                           00024000
         MACRO                                                          00025000
&LABEL   IEXIT                                                          00026000
.********************************************************************** 00027000
.*             Internal subroutine exit sequence.                     * 00028000
.********************************************************************** 00029000
         GBLC  &VMASA                                                   00030000
&LABEL   LM    0,14,&VMASA         Recover caller's registers.          00031000
         BR    14                  Go back.                             00032000
         MEND                                                           00033000
         MACRO                                                          00034000
&CMD     CMD   &LEN,&OPTNS,&ALLOW                                       00035000
.********************************************************************** 00036000
.*             Command table entry definition.                        * 00037000
.********************************************************************** 00038000
         GBLC  &OPTSTR1,&OPTSTR2,&OPTSTR3                               00039000
         DC    CL8'&CMD'           Command name.                        00040000
         DC    AL1(&LEN-1)         Minimum abbreviation length - 1.     00041000
         DECODE &OPTNS                                                  00042000
         DC    AL1(&OPTSTR1,&OPTSTR2,&OPTSTR3)  Default options.        00043000
         DECODE &ALLOW                                                  00044000
         DC    AL1(&OPTSTR1,&OPTSTR2,&OPTSTR3)  Allowed options.        00045000
         MEND                                                           00046000
         MACRO                                                          00047000
&OPTN    OPTN  &LEN,&SET,&RESET,&CONFLCT,&INDEX                         00048000
.********************************************************************** 00049000
.*             Option table entry definition.                         * 00050000
.********************************************************************** 00051000
         GBLC  &OPTSTR1,&OPTSTR2,&OPTSTR3                               00052000
         DC    CL8'&OPTN'          Option name.                         00053000
         DC    AL1(&LEN-1)         Minimum abbreviation length - 1.     00054000
         DECODE &SET                                                    00055000
         DC    AL1(&OPTSTR1,&OPTSTR2,&OPTSTR3)  Option bits to set.     00056000
         AIF   (T'&INDEX NE 'O').INDEX                                  00057000
         DECODE &RESET                                                  00058000
         DC    AL1(&OPTSTR1,&OPTSTR2,&OPTSTR3)  Option bits to reset.   00059000
         AGO   .CONFLCT                                                 00060000
.INDEX   DC    AL1(X'FF',&INDEX,0) Index to special handler.            00061000
.CONFLCT DECODE &CONFLCT                                                00062000
         DC    AL1(&OPTSTR1,&OPTSTR2,&OPTSTR3)  Option bits to test.    00063000
         MEND                                                           00064000
         MACRO                                                          00065000
         DECODE &LIST                                                   00066000
.********************************************************************** 00067000
.*             Option decode internal MACRO.                          * 00068000
.********************************************************************** 00069000
         GBLC  &OPTSTR1,&OPTSTR2,&OPTSTR3                               00070000
         LCLA  &I,&J                                                    00071000
         LCLC  &OPT1,&OPT2,&OPT3,&OPTN                                  00072000
&OPTSTR1 SETC  ''                                                       00073000
&OPTSTR2 SETC  ''                                                       00074000
&OPTSTR3 SETC  ''                                                       00075000
&OPT1    SETC  'PACKS2  ASISOLDDAPP REPLFIFOLIFOSTCK'                   00076000
&OPT2    SETC  'DEVIDEVOTAPEPRT BLK IGNRTRACLIST'                       00077000
&OPT3    SETC  'HOLD'                                                   00078000
.*                                                                      00079000
.*  Identify each option                                                00080000
.LOOP    AIF   (&I GE N'&LIST).DONE1                                    00081000
&I       SETA  &I+1                                                     00082000
&OPTN    SETC  '&LIST(&I).    '(1,4)   Next option from list.           00083000
.*                                                                      00084000
.*  See if it is in the first set of options.                           00085000
&J       SETA  1                                                        00086000
.SRCH1   AIF   (&J GT K'&OPT1).TRY2                                     00087000
         AIF   ('&OPTN' EQ '&OPT1'(&J,4)).SET1                          00088000
&J       SETA  &J+4                                                     00089000
         AGO   .SRCH1                                                   00090000
.SET1    ANOP                                                           00091000
&OPTSTR1 SETC  '&OPTSTR1.+WRK1&LIST(&I)'                                00092000
         AGO   .LOOP                                                    00093000
.*                                                                      00094000
.*  See if it is in the second set of optoins.                          00095000
.TRY2    ANOP                                                           00096000
&J       SETA  1                                                        00097000
.SRCH2   AIF   (&J GT K'&OPT2).TRY3                                     00098000
         AIF   ('&OPTN' EQ '&OPT2'(&J,4)).SET2                          00099000
&J       SETA  &J+4                                                     00100000
         AGO   .SRCH2                                                   00101000
.SET2    ANOP                                                           00102000
&OPTSTR2 SETC  '&OPTSTR2.+WRK2&LIST(&I)'                                00103000
         AGO   .LOOP                                                    00104000
.*                                                                      00105000
.*  See if it is in the third set of optoins.                           00106000
.TRY3    ANOP                                                           00107000
&J       SETA  1                                                        00108000
.SRCH3   AIF   (&J GT K'&OPT3).ERROR                                    00109000
         AIF   ('&OPTN' EQ '&OPT3'(&J,4)).SET3                          00110000
&J       SETA  &J+4                                                     00111000
         AGO   .SRCH3                                                   00112000
.SET3    ANOP                                                           00113000
&OPTSTR3 SETC  '&OPTSTR3.+WRK3&LIST(&I)'                                00114000
         AGO   .LOOP                                                    00115000
.*                                                                      00116000
.*  Could not find it.                                                  00117000
.ERROR   MNOTE 8,'Option "&LIST(&I)" is not defined.'                   00118000
         AGO   .LOOP                                                    00119000
.*                                                                      00120000
.*  Done with option list.                                              00121000
.DONE1   AIF   (K'&OPTSTR1 GT 0).DONE2                                  00122000
&OPTSTR1 SETC  '+0'                                                     00123000
.DONE2   AIF   (K'&OPTSTR2 GT 0).DONE3                                  00124000
&OPTSTR2 SETC  '+0'                                                     00125000
.DONE3   AIF   (K'&OPTSTR3 GT 0).DONE4                                  00126000
&OPTSTR3 SETC  '+0'                                                     00127000
.DONE4   ANOP                                                           00128000
&OPTSTR1 SETC  '&OPTSTR1'(2,K'&OPTSTR1-1)                               00129000
&OPTSTR2 SETC  '&OPTSTR2'(2,K'&OPTSTR2-1)                               00130000
&OPTSTR3 SETC  '&OPTSTR3'(2,K'&OPTSTR3-1)                               00131000
         MEND                                                           00132000
         EJECT                                                          00133000
*********************************************************************** 00134000
VMARC    CSECT                                                        * 00135000
*                       LZW-style file compression                    * 00136000
*                     and S2-style file compression                   * 00137000
*                                                                     * 00138000
*  Usage:   VMARC  function  fileid(s)  (  options...                 * 00139000
*                                                                     * 00140000
*  Functions:                                                         * 00141000
*                                                                     * 00142000
*  PACK    inpattrn  outpattrn    -- Compress to disk file.           * 00143000
*  PACK    inpattrn  ( TAPn       -- Compress to tape.                * 00144000
*  PACK    inpattrn  ( PUNCH      -- Compress to punch.               * 00145000
*  PACK    inpattrn  ( PRINT      -- Compress to print.               * 00146000
*                                                                     * 00147000
*  UNPACK  inpattrn  outpattrn    -- Decompress from disk file.       * 00148000
*  UNPACK  outpattrn ( TAPn       -- Decompress from tape.            * 00149000
*  UNPACK  outpattrn ( READER     -- Decompress from reader.          * 00150000
*                                                                     * 00151000
*  Obsolete functions still supported in this release:                * 00152000
*                                                                     * 00153000
*  DUMP    inpattrn               -- Compress to punch.               * 00154000
*  TDUMP   inpattrn               -- Compress to tape.                * 00155000
*  LOAD    outpattrn              -- Decompress from reader.          * 00156000
*  TLOAD   outpattrn              -- Decompress from tape.            * 00157000
*                                                                     * 00158000
*  Options:                                                           * 00159000
*             LZW | S2 | STORE    -- Compaction method.               * 00160000
*             REPLACE | NOREPLACE -- Over-write existing file.        * 00161000
*             APPEND | NOAPPEND   -- Extend an existing file.         * 00162000
*             TRACE | NOTRACE     -- Report statistics.               * 00163000
*             OLDDATE | NEWDATE   -- Set time-stamp of output.        * 00164000
*             BLOCK nnn           -- Block size for output.           * 00165000
*             TAPn                -- Logical tape identifier.         * 00166000
*             PUN | PRT           -- Unit record output device.       * 00167000
*             RDR                 -- Unit record input device.        * 00168000
*             HOLD                -- Retain reader input file.        * 00169000
*             STACK | FIFO | LIFO -- Stack trace information.         * 00170000
*             IGNORE | NOIGNORE   -- Ignore original member names.    * 00171000
*                                                                     * 00172000
 DC C'Copyright (c) 1989, 1990, John S. Fisher, Troy, NY.     '         00173000
 DC C'Copyright (C) 1980 Columbia University, Carl Klass and  '         00174000
 DC C'Jeff Damens, CUCCA User Services, 12/80                 '         00175000
*                                                                       00176000
 DC C'Permission is granted to use, copy, and distribute this '         00177000
 DC C'program in any form as long as (1) this notice of copy- '         00178000
 DC C'right and distribution policy remain intact, (2) the    '         00179000
 DC C'distribution is made without charge above and beyond    '         00180000
 DC C'any reasonable fee to cover costs in making and deliver-'         00181000
 DC C'ing the copy, and (3) no additional restrictions are im-'         00182000
 DC C'posed, either as to distribution or as to use.          '         00183000
*                                                                     * 00184000
*  Note:  Specific permission is granted to Eric Thomas to use this   * 00185000
*         program in his "Revised Listserv" program product, and to   * 00186000
*         distribute this program as part of Listserv, whether or not * 00187000
*         any fee is collected.  Moreover, Eric Thomas may, at his    * 00188000
*         discretion, modify the distribution policy stated above to  * 00189000
*         prohibit redistribution of copies obtained as part of his   * 00190000
*         Listserv product.                                           * 00191000
*                                                                     * 00192000
*********************************************************************** 00193000
         EJECT                                                          00194000
         PRINT NOGEN                                                    00195000
         USING NUCON,0                                                  00196000
*********************************************************************** 00197000
VMARC    CSECT                                                        * 00198000
*                       Main routine and entry point.                 * 00199000
*                                                                     * 00200000
*********************************************************************** 00201000
VMARCEP  DS    0H                                                       00202000
         SAVE  (14,12),,*          Save caller's registers.             00203000
         LR    RBASE,15            Our base.                            00204000
         USING VMARCEP,RBASE                                            00205000
         LR    R4,R1               Save pointer to command line.        00206000
*********************************************************************** 00207000
*              Establish execution environment.                       * 00208000
*********************************************************************** 00209000
         STRINIT                   Initialize for GETMAIN.              00210000
         DMSKEY NUCLEUS            * * * * * * * * * * * * * * * * * *  00211000
         IC    R5,DOSFLAGS         Get NUCON's DOSFLAGS.                00212000
         NI    DOSFLAGS,255-DOSSVC Disable DOS SVC handling.            00213000
         DMSKEY RESET              * * * * * * * * * * * * * * * * * *  00214000
*********************************************************************** 00215000
*              Initialize working storage.                            * 00216000
*********************************************************************** 00217000
         GETMAIN R,LV=WRKDLEN*8    Allocate work area.                  00218000
         LR    R14,R1                                                   00219000
         LR    R0,R1                                                    00220000
         L     R1,=A(WRKDLEN*8)                                         00221000
         SR    R15,R15                                                  00222000
         MVCL  R0,R14              Initialize work area to zeroes.      00223000
         ST    R13,4(,R14)         Chain our save area to caller's.     00224000
         ST    R14,8(,R13)         ..and caller's to ours.              00225000
         LR    R13,R14                                                  00226000
         USING WRKDSECT,R13                                             00227000
         STC   R5,WRKDOSF          Save DOS flags for restoration.      00228000
         ZAP   WRKIDCNT,=P'0'      Initialize file counter.             00229000
*********************************************************************** 00230000
*              Parse the command line.                                * 00231000
*********************************************************************** 00232000
         ICALL PARSE               Decipher command line.               00233000
         LTR   R15,R15                                                  00234000
         BNZ   VMAERROR                                                 00235000
         EJECT ,                                                        00236000
*********************************************************************** 00237000
*              Process next input file.                               * 00238000
*********************************************************************** 00239000
MAINLOOP DS    0H                                                       00240000
         MVI   WRKFLAGB,X'00'      Reset per-file processing flags.     00241000
*                                                                       00242000
*  Open next input/output file pair.                                    00243000
         ICALL OPENALL             Open files.                          00244000
         CH    R15,=H'4'           Test return code.                    00245000
         BH    VMAERROR            --RC > 4  --> error.                 00246000
         BE    VMAEXIT0            --RC = 4  --> no more files.         00247000
*                                  --RC = 0  --> continue.              00248000
*                                                                       00249000
*  Select compaction routine.                                           00250000
         L     R15,=A(VMS2)        Assume S2 method.                    00251000
         TM    WRKOPTN1,WRK1S2     Is assumption correct?               00252000
         BO    MAINCALL                                                 00253000
         L     R15,=A(VMASIS)      Change assumption to as-is method.   00254000
         TM    WRKOPTN1,WRK1ASIS   Is assumption correct?               00255000
         BO    MAINCALL                                                 00256000
         L     R15,=A(VMLZW)       Must be LZW method.                  00257000
MAINCALL DS    0H                                                       00258000
         ICALL (R15)               Call compaction handler.             00259000
         LTR   R15,R15                                                  00260000
         BNZ   VMAERROR                                                 00261000
*********************************************************************** 00262000
*              Report result, if requested.                           * 00263000
*********************************************************************** 00264000
         TM    WRKOPTN2,WRK2TRAC   Option requested?                    00265000
         BZ    ENDTRACE            --no.                                00266000
         TM    WRKFLAGB,WRKBSKIP   Member skipped?                      00267000
         BO    ENDTRACE            --yes.                               00268000
         LA    R1,WRKIPID          Use input fileid if packing.         00269000
         TM    WRKOPTN1,WRK1PACK                                        00270000
         BO    *+L'*+4                                                  00271000
         LA    R1,WRKFINID         ..and output fileid if unpacking.    00272000
         MVC   TRTXTFN,0(R1)       Lay in file name.                    00273000
         MVC   TRTXTFT,8(R1)       ..file type.                         00274000
         MVC   TRTXTFM,16(R1)      ..and file mode.                     00275000
         L     R1,WRKKODOU         Output byte count.                   00276000
         M     R0,=F'100'          Scale for percent.                   00277000
         D     R0,WRKKODIN         100 * bytes-out / bytes-in.          00278000
         LR    R3,R1                                                    00279000
*  If STACK option specified, stack information now.                    00280000
         TM    WRKOPTN1,WRK1STCK   Stacking requested?                  00281000
         BZ    TRMTRACE                                                 00282000
         LA    R2,WRKATBUF                                              00283000
         LINEDIT TEXTA=TRACETXT,RENT=NO,COMP=NO,DISP=NONE,BUFFA=(R2),  X00284000
               SUB=(DECA,WRKKODIN,DECA,WRKKODOU,DEC,(R3))               00285000
         MVC   WRKAPLEN,WRKATBUF   Set length field.                    00286000
         LA    R1,WRKAPLST                                              00287000
         SVC   202                                                      00288000
         DC    AL4(*+4)                                                 00289000
         B     ENDTRACE                                                 00290000
*  Trace output goes to the terminal.                                   00291000
TRMTRACE DS    0H                                                       00292000
         LINEDIT TEXTA=TRACETXT,RENT=NO,COMP=NO,                       X00293000
               SUB=(DECA,WRKKODIN,DECA,WRKKODOU,DEC,(R3))               00294000
ENDTRACE DS    0H                                                       00295000
*********************************************************************** 00296000
*              Close files, as needed.                                * 00297000
*********************************************************************** 00298000
         TM    WRKOPTN2,WRK2DEVI   Device used for input?               00299000
         BO    VMACLOUT            --yes.  Leave it open for now.       00300000
         ICALL INCLOSE             Close the input file, as needed.     00301000
         LTR   R15,R15                                                  00302000
         BNZ   VMAERROR                                                 00303000
VMACLOUT DS    0H                                                       00304000
         TM    WRKOPTN2,WRK2DEVO   Device used for output?              00305000
         BO    MAINLOOP            --yes.  Leave it open for now.       00306000
         ICALL OUTCLOSE            Close the output file, as needed.    00307000
         LTR   R15,R15                                                  00308000
         BZ    MAINLOOP                                                 00309000
*                                                                       00310000
VMAERROR DS    0H                                                       00311000
         LR    R3,R15              Preserve error return code.          00312000
         OI    WRKFLAGB,WRKBENDI+WRKBENDO+WRKBERR                       00313000
         ICALL INCLOSE             Close anything left open for input.  00314000
         ICALL OUTCLOSE            Close anything left open for output. 00315000
         B     VMAEXIT                                                  00316000
VMAEXIT0 DS    0H                                                       00317000
         OI    WRKFLAGB,WRKBENDI+WRKBENDO                               00318000
         ICALL INCLOSE             Close anything left open for input.  00319000
         ICALL OUTCLOSE            Close anything left open for output. 00320000
         SR    R3,R3               Set normal return code.              00321000
VMAEXIT  DS    0H                                                       00322000
*                                                                       00323000
*  Liberate any FIDDSECT storage left behind.                           00324000
VMAFREEF DS    0H                                                       00325000
         L     R2,WRKFIDPT         Next FIDDSECT.                       00326000
         LTR   R2,R2               Have we fallen off the end?          00327000
         BNP   VMAFREEW            --yes, go free workarea.             00328000
         USING FIDDSECT,R2                                              00329000
         L     R0,FIDFIDPT         Next FIDDSECT in chain.              00330000
         ST    R0,WRKFIDPT                                              00331000
         DROP  R2                                                       00332000
         FREEMAIN R,A=(R2),LV=FIDDLEN  Liberate FIDDSECT storage.       00333000
         B     VMAFREEF                                                 00334000
*                                                                       00335000
*  Liberate WRKDSECT.                                                   00336000
VMAFREEW DS    0H                                                       00337000
         IC    R5,WRKDOSF          DOS simulation flags.                00338000
         LR    R1,R13              Address of WRKDSECT.                 00339000
         L     R13,4(,R13)         Previous save area.                  00340000
         FREEMAIN R,LV=8*WRKDLEN,A=(1)  Liberate WRKDSECT.              00341000
         DMSKEY NUCLEUS            * * * * * * * * * * * * * * * * * *  00342000
         OI    MISFLAGS,RELPAGES   Set relpage bit.                     00343000
         STC   R5,DOSFLAGS         Restore original DOS flags.          00344000
         DMSKEY RESET              * * * * * * * * * * * * * * * * * *  00345000
*                                                                       00346000
*  ..and finally, return to operating system.                           00347000
         LR    R15,R3              Recover return code.                 00348000
         RETURN (14,12),T,RC=(15)  ..and return.                        00349000
         SPACE ,                                                        00350000
TRACETXT DC    AL1(TRTXTLEN)                                            00351000
TRTXTFN  DS    CL8                 File name.                           00352000
         DC    C' '                                                     00353000
TRTXTFT  DS    CL8                 File type.                           00354000
         DC    C' '                                                     00355000
TRTXTFM  DS    CL2                 File mode.                           00356000
         DC    C'. '                                                    00357000
         DC    C'Bytes in=........, bytes out=........ (......%)'       00358000
TRTXTLEN EQU   *-TRACETXT-1                                             00359000
         TITLE '--  PARSE   Decipher command parameters and options'    00360000
*********************************************************************** 00361000
PARSE    CSECT                                                        * 00362000
*                       Parse the command line.                       * 00363000
*                                                                     * 00364000
*  1.  Determine which function has been requested.                   * 00365000
*                                                                     * 00366000
*  2.  Scan the command line for the open parenthesis which marks     * 00367000
*      the beginning of the command options.                          * 00368000
*                                                                     * 00369000
*  3.  Process the command options.  Since the options can affect     * 00370000
*      the semantics of the command line file identifiers, we must    * 00371000
*      handle the options before we do the file identifiers.          * 00372000
*                                                                     * 00373000
*  4.  Process the command line parameters, file identifiers and      * 00374000
*      patterns.  The combination of function and any device option   * 00375000
*      determines how many parameters to expect and whether to        * 00376000
*      is them for input or output (or both).                         * 00377000
*                                                                     * 00378000
*********************************************************************** 00379000
         IENTER ,                                                       00380000
         MVC   WRKMODUL,0(R4)      Remember who we are.                 00381000
*********************************************************************** 00382000
*                                                                     * 00383000
*              Identify which function is requested.                  * 00384000
*                                                                     * 00385000
*********************************************************************** 00386000
         LA    R4,8(,R4)           Address of first command line token. 00387000
         LA    R5,7(,R4)           End of parameter token.              00388000
         CLI   0(R5),X'40'         Trailing blank?                      00389000
         BNE   *+L'*+4             ..no.                                00390000
         BCT   R5,*-8              Remove all trailing blanks.          00391000
         SR    R5,R4               Length-1 of non-blank part.          00392000
         LM    R0,R2,=A(CMDDLEN,CMDTABEN,CMDTABLE)                      00393000
         USING CMDDSECT,R2                                              00394000
PACMDLP  DS    0H                                                       00395000
         EX    R5,PACMDCLI         Abbreviation length Ok?              00396000
         BH    PACMDNXT            --no, try another table entry.       00397000
         EX    R5,PACMDCLC         Does option match keyword?           00398000
         BE    PACMDSET            --yes, go set option bits.           00399000
PACMDNXT BXLE  R2,R0,PACMDLP                                            00400000
         B     PARERCMD                                                 00401000
*                                                                       00402000
PACMDCLI CLI   CMDMIN,*-*          Executed: Test abbr. length.         00403000
PACMDCLC CLC   CMDKEY(*-*),0(R4)   Executed: Compare keywords.          00404000
*                                                                       00405000
PACMDSET DS    0H                                                       00406000
         MVC   WRKOPTNS,CMDOPTNS   Default options.                     00407000
         ICM   R1,B'0111',CMDALLOW Allowed options.                     00408000
         X     R1,=A(X'FFFFFF')    Invert the bits.                     00409000
         STCM  R1,B'0111',WRKALLOW Save bits for option testing.        00410000
         MVC   WRKIPTID,=CL4'TAP1' Tape device default.                 00411000
         MVC   WRKOPTID,=CL4'TAP1' Tape device default.                 00412000
         DROP  R2                                                       00413000
*                                                                       00414000
         ST    R4,WRKPRMPT         Remember parameter pointer.          00415000
PAFNDOPT DS    0H                                                       00416000
         LA    R4,8(,R4)           Advance to next token.               00417000
         CLI   0(R4),X'FF'         Fence?                               00418000
         BE    PAFILEID            --yes, no options.                   00419000
         CLI   0(R4),C'('          Start of command options?            00420000
         BNE   PAFNDOPT            --no, not yet.                       00421000
         EJECT                                                          00422000
*********************************************************************** 00423000
*                                                                     * 00424000
*              Process command line options, if any.                  * 00425000
*                                                                     * 00426000
*********************************************************************** 00427000
PAROPTNS DS    0H                                                       00428000
         LA    R4,8(,R4)           Advance to next command token.       00429000
         CLI   0(R4),X'FF'         Fence?                               00430000
         BE    PAFILEID            --yes, now go look at parameters.    00431000
         CLI   0(R4),C')'          End of options?                      00432000
         BE    PAFILEID            --yes, now go look at parameters.    00433000
         LA    R5,7(,R4)           End of current option.               00434000
         CLI   0(R5),X'40'         Trailing blank?                      00435000
         BNE   *+L'*+4                                                  00436000
         BCT   R5,*-8              Remove all trailing blanks.          00437000
         SR    R5,R4               Length-1 of non-blank part.          00438000
         LM    R0,R2,=A(OPTDLEN,OPTTABEN,OPTTABLE)  BXLE values.        00439000
         USING OPTDSECT,R2                                              00440000
PAROPTLP DS    0H                                                       00441000
         EX    R5,PAROCLI          Abbreviation length Ok?              00442000
         BH    PAROPTNX            --no, try another table entry.       00443000
         EX    R5,PAROCLC          Does option match keyword?           00444000
         BE    PAROPTST            --yes, go set option bits.           00445000
PAROPTNX BXLE  R2,R0,PAROPTLP                                           00446000
         B     PAREROPT                                                 00447000
*                                                                       00448000
PAROCLI  CLI   OPTMIN,*-*          Executed: Test abbr. length.         00449000
PAROCLC  CLC   OPTKEY(*-*),0(R4)   Executed: Compare keywords.          00450000
*                                                                       00451000
*  Record options specification in WRKOPTNS area.                       00452000
PAROPTST DS    0H                                                       00453000
         SR    R6,R6               Clear for ICM.                       00454000
         SR    R7,R7               Clear for ICM.                       00455000
         ICM   R6,B'0111',OPTSET   Bits to go on.                       00456000
         ICM   R7,B'0111',WRKOPTNS Current option bits.                 00457000
         OR    R7,R6               Turn bits on.                        00458000
         CLI   OPTFLAG,255         Value-based option?                  00459000
         BE    PAROPSET                                                 00460000
         ICM   R6,B'0111',OPTRESET Bits to go off.                      00461000
         X     R6,=A(X'FFFFFF')    Invert off bits.                     00462000
         NR    R7,R6               Turn bits off.                       00463000
PAROPSET DS    0H                                                       00464000
         STCM  R7,B'0111',WRKOPTNS Save updated options.                00465000
         ICM   R7,B'0111',WRKALLOW Conflict bits.                       00466000
         ICM   R6,B'0111',OPTALLOW Conflict bits.                       00467000
         LR    R5,R7                                                    00468000
         NR    R5,R6               Test for keyword conflict.           00469000
         BNZ   PAREROPT            --Conflicting options.               00470000
         OR    R7,R6               Update allowed options.              00471000
         STCM  R7,B'0111',WRKALLOW Update conflict bits.                00472000
         CLI   OPTFLAG,255         Value-based option?                  00473000
         BNE   PAROPTNS            --no, get next option.               00474000
*                                                                       00475000
*  Handle options that require special processing.                      00476000
         SR    R5,R5                                                    00477000
         IC    R5,OPTDISP          Routine selector.                    00478000
         B     *+L'*(R5)           ..Go to action routine.              00479000
         B     PARBLOCK      Block size option.                         00480000
         B     PARTAPE       Tape device option.                        00481000
*                                                                       00482000
*  Process TAPn option.                                                 00483000
PARTAPE  DS    0H                                                       00484000
         TM    WRKOPTN1,WRK1PACK   Packing?                             00485000
         BO    PARTAPE1            --yes, tape is output device.        00486000
         OI    WRKOPTN2,WRK2DEVI   Mark tape as the input device.       00487000
         OI    WRKALLO2,WRK2DEVI   ..                                   00488000
         B     PARTAPE2                                                 00489000
PARTAPE1 DS    0H                                                       00490000
         OI    WRKOPTN2,WRK2DEVO   Mark tape as the output device.      00491000
         OI    WRKALLO2,WRK2DEVO   ..                                   00492000
PARTAPE2 DS    0H                                                       00493000
         MVC   WRKOPTID,OPTKEY     Save tape id in output plist.        00494000
         MVC   WRKIPTID,OPTKEY     Save tape id in input plist.         00495000
         CLI   WRKOPTID+3,C'E'     Non-specific TAPE option?            00496000
         BNE   PAROPTNS                                                 00497000
         MVI   WRKOPTID+3,C'1'     Change TAPE to TAP1.                 00498000
         MVI   WRKIPTID+3,C'1'     ..                                   00499000
         B     PAROPTNS                                                 00500000
         DROP  R2                                                       00501000
*                                                                       00502000
*  Process BLOCK nnn option.                                            00503000
PARBLOCK DS    0H                                                       00504000
         LA    R4,8(,R4)           Advance to value token.              00505000
         CLI   0(R4),X'FF'         Fence?                               00506000
         BE    PARERVAL                                                 00507000
         LA    R5,7(,R4)           End of current option.               00508000
         CLI   0(R5),X'40'         Trailing blank?                      00509000
         BNE   *+L'*+4                                                  00510000
         BCT   R5,*-8              Remove all trailing blanks.          00511000
         SR    R5,R4               Length-1 of non-blank part.          00512000
         LA    R5,1(,R5)                                                00513000
         LR    R2,R4               Start of current option.             00514000
         SR    R1,R1                                                    00515000
OBLKLP   DS    0H                                                       00516000
         CLI   0(R2),C'0'          Test for numeric range.              00517000
         BL    OBLKFIN                                                  00518000
         CLI   0(R2),C'9'          ..                                   00519000
         BH    OBLKFIN                                                  00520000
         M     R0,=F'10'           Scale previous value.                00521000
         IC    R0,0(R2)                                                 00522000
         N     R0,=A(X'0F')        Convert digit to binary.             00523000
         AR    R1,R0               Add to running total.                00524000
         LA    R2,1(,R2)           Advance to next digit.               00525000
         BCT   R5,OBLKLP                                                00526000
         B     OBLKSTOR                                                 00527000
OBLKFIN  DS    0H                                                       00528000
         CLI   0(R2),C'K'          x 1024 multiplier?                   00529000
         BNE   PARERVAL                                                 00530000
         M     R0,=F'1024'                                              00531000
         BCT   R5,PARERVAL         ..Better be last.                    00532000
OBLKSTOR DS    0H                                                       00533000
         CL    R1,=F'32700'        Test range.                          00534000
         BH    PARERVAL                                                 00535000
         CL    R1,=A(HDRDLEN)      Test range.                          00536000
         BL    PARERVAL                                                 00537000
         ST    R1,WRKBLKSZ         Save requested block size.           00538000
         B     PAROPTNS                                                 00539000
         EJECT                                                          00540000
*********************************************************************** 00541000
*                                                                     * 00542000
*              Process fileid parameters.                             * 00543000
*                                                                     * 00544000
*********************************************************************** 00545000
PAFILEID DS    0H                                                       00546000
         L     R4,WRKPRMPT         Recover pointer to parameters.       00547000
         MVC   WRKOUTID,=CL18'=       =       ='  Output default.       00548000
         TM    WRKOPTN1,WRK1PACK   Packing?                             00549000
         BO    PARINID             --yes, get input file pattern.       00550000
         MVC   WRKOUTID,=CL18'*       *       A'  Change default.       00551000
*********************************************************************** 00552000
*  Process the input file identifier.                                 * 00553000
*********************************************************************** 00554000
PARINID  DS    0H                                                       00555000
         TM    WRKOPTN2,WRK2DEVI   Device unpack?                       00556000
         BO    PAROUTID            --Only output file.                  00557000
         LA    R4,8(,R4)           Advance to next command token.       00558000
         CLI   0(R4),X'FF'         Fence?                               00559000
         BE    PARERNOI            --Required filename missing.         00560000
         CLI   0(R4),C'('          Option delimiter?                    00561000
         BE    PARERNOI            --Required filename missing.         00562000
         MVC   WRKINFN,0(R4)       Filename for input file.             00563000
*                                                                       00564000
         LA    R4,8(,R4)           Advance to next command token.       00565000
         CLI   0(R4),X'FF'         Fence?                               00566000
         BE    PARERNOI            --Required filename missing.         00567000
         CLI   0(R4),C'('          Option delimiter?                    00568000
         BE    PARERNOI            --Required filename missing.         00569000
         MVC   WRKINFT,0(R4)       Filetype for input file.             00570000
*                                                                       00571000
         MVC   WRKINFM,=CL8'A'     Set default input filemode.          00572000
         LA    R4,8(,R4)           Advance to next command token.       00573000
         CLI   0(R4),X'FF'         Fence?                               00574000
         BE    PARDONE             --Use 'A' for filemode.              00575000
         CLI   0(R4),C'('          Option delimiter?                    00576000
         BE    PARDONE             --Use 'A' for filemode.              00577000
         MVC   WRKINFM,0(R4)       Filemode of input file.              00578000
*********************************************************************** 00579000
         TM    WRKOPTN2,WRK2DEVO   If device output, no output fileid.  00580000
         BO    PARTSTND                                                 00581000
*********************************************************************** 00582000
*  Process the output file identifier.                                * 00583000
*********************************************************************** 00584000
PAROUTID DS    0H                                                       00585000
         LA    R4,8(,R4)           Advance to next command token.       00586000
         CLI   0(R4),X'FF'         Fence?                               00587000
         BE    PARDONE                                                  00588000
         CLI   0(R4),C'('          Option delimiter?                    00589000
         BE    PARDONE                                                  00590000
         MVC   WRKOUTFN,0(R4)      Filename of output file.             00591000
*                                                                       00592000
         LA    R4,8(,R4)           Advance to next command token.       00593000
         CLI   0(R4),X'FF'         Fence?                               00594000
         BE    PARERNOO                                                 00595000
         CLI   0(R4),C'('          Option delimiter?                    00596000
         BE    PARERNOO                                                 00597000
         MVC   WRKOUTFT,0(R4)      Filetype of output file.             00598000
*                                                                       00599000
         LA    R4,8(,R4)           Advance to next command token.       00600000
         CLI   0(R4),X'FF'         Fence?                               00601000
         BE    PARERNOO                                                 00602000
         CLI   0(R4),C'('          Option delimiter?                    00603000
         BE    PARERNOO                                                 00604000
         MVC   WRKOUTFM,0(R4)      File mode of output file.            00605000
*                                                                       00606000
         TM    WRKOPTN1,WRK1PACK   If LIST or UNPACK..                  00607000
         BZ    PARTSTM2            ..only filemode test needed.         00608000
PARTSTFN DS    0H                                                       00609000
         TRT   WRKOUTFN,TABVFILE   Test for valid filename characters.  00610000
         BZ    PARTSTFT            --All are valid.                     00611000
         CLC   WRKOUTFN,=CL8'='    Only other possibility.              00612000
         BNE   PAREROUT                                                 00613000
PARTSTFT DS    0H                                                       00614000
         TRT   WRKOUTFT,TABVFILE   Test for valid filetype characters.  00615000
         BZ    PARTSTFM            --All are valid.                     00616000
         CLC   WRKOUTFT,=CL8'='    Only other possibility.              00617000
         BNE   PAREROUT                                                 00618000
PARTSTFM DS    0H                                                       00619000
         CLC   WRKOUTFM,=CL8'='    Validate filemode.                   00620000
         BE    PARTSTND                                                 00621000
PARTSTM2 DS    0H                                                       00622000
         TRT   WRKOUTFM,TABVFILE   Test for valid filetype characters.  00623000
         BNE   PAREROUT            --Something is wrong therein.        00624000
         CLI   WRKOUTFM,C'A'       Make sure 1st is alphabetic.         00625000
         BL    PAREROUT                                                 00626000
         CLI   WRKOUTFM,C'Z'       ..                                   00627000
         BH    PAREROUT                                                 00628000
         CLI   WRKOUTFM+1,C' '     ..and that 2nd is blank..            00629000
         BE    PARTSTND                                                 00630000
         CLI   WRKOUTFM+1,C'0'     ..or numeric.                        00631000
         BL    PAREROUT                                                 00632000
         CLI   WRKOUTFM+1,C'6'     ..                                   00633000
         BH    PAREROUT                                                 00634000
         CLI   WRKOUTFM+2,C' '     ..and that 3rd is be blank..         00635000
         BNE   PAREROUT                                                 00636000
*                                                                       00637000
PARTSTND DS    0H                                                       00638000
         LA    R4,8(,R4)           Advance to next command token.       00639000
         CLI   0(R4),X'FF'         Fence?                               00640000
         BE    PARDONE                                                  00641000
         CLI   0(R4),C'('          Option delimiter?                    00642000
         BNE   PAREREXC                                                 00643000
         EJECT                                                          00644000
*********************************************************************** 00645000
*                                                                     * 00646000
*              Final clean-up for command line processing.            * 00647000
*                                                                     * 00648000
*********************************************************************** 00649000
PARDONE  DS    0H                                                       00650000
         TM    WRKOPTN2,WRK2BLK    Block size specified?                00651000
         BO    PARDONE3            --yes, skip ahead.                   00652000
         L     R0,=F'4096'         Use 4096 byte records for tape.      00653000
         TM    WRKOPTN2,WRK2TAPE                                        00654000
         BO    PARDONE2                                                 00655000
         LA    R0,132              Use 132 byte records for printer.    00656000
         TM    WRKOPTN2,WRK2PRT                                         00657000
         BO    PARDONE2                                                 00658000
         LA    R0,80               ..and 80 bytes for everything else.  00659000
PARDONE2 DS    0H                                                       00660000
         ST    R0,WRKBLKSZ         Save defaulted block size.           00661000
PARDONE3 DS    0H                                                       00662000
         TM    WRKOPTN1,WRK1STCK   Stacking requested?                  00663000
         BZ    PAREXIT0            --no, on to next section.            00664000
         MVC   WRKAPCMD,=CL8'ATTN'                                      00665000
         MVC   WRKAPDIR,=CL4'FIFO' Assume FIFO stacking.                00666000
         TM    WRKOPTN1,WRK1LIFO                                        00667000
         BZ    *+L'*+4                                                  00668000
         MVI   WRKAPDIR,C'L'       Change to LIFO stacking.             00669000
         LA    R1,WRKATBUF+1                                            00670000
         ST    R1,WRKAPBPT                                              00671000
         B     PAREXIT0                                                 00672000
*********************************************************************** 00673000
*              Return to caller.                                      * 00674000
*********************************************************************** 00675000
PAREXIT8 DS    0H                                                       00676000
         LA    R15,8               Set bad return code.                 00677000
         B     PAREXIT                                                  00678000
PAREXIT0 DS    0H                                                       00679000
         SR    R15,R15             Set normal return code.              00680000
*        B     PAREXIT                                                  00681000
PAREXIT  IEXIT ,                   Return to caller.                    00682000
*********************************************************************** 00683000
PARERNOI DS    0H                                                       00684000
         WRTERM 'Incomplete input file specification'                   00685000
         B     PAREXIT8                                                 00686000
PAREROUT DS    0H                                                       00687000
         WRTERM 'Output file specification invalid'                     00688000
         B     PAREXIT8                                                 00689000
PARERNOO DS    0H                                                       00690000
         WRTERM 'Incomplete output file specification'                  00691000
         B     PAREXIT8                                                 00692000
PAREROPT DS    0H                                                       00693000
         LINEDIT TEXT='Invalid or conflicting option ........',        X00694000
               SUB=(CHARA,((R4),8))                                     00695000
         B     PAREXIT8                                                 00696000
PARERVAL DS    0H                                                       00697000
         LINEDIT TEXT='Invalid numeric value ........',                X00698000
               SUB=(CHARA,((R4),8))                                     00699000
         B     PAREXIT8                                                 00700000
PARERNOV DS    0H                                                       00701000
         LINEDIT TEXT='Missing numeric value for ........',            X00702000
               SUB=(CHARA,((R4),8))                                     00703000
         B     PAREXIT8                                                 00704000
PARERCMD DS    0H                                                       00705000
         WRTERM 'No function specified.'                                00706000
         B     PAREXIT8                                                 00707000
PAREREXC DS    0H                                                       00708000
         WRTERM 'Extraneous parameters on command line'                 00709000
         B     PAREXIT8                                                 00710000
VMPEXPL  DS    0H                                                       00711000
         LM    R1,R2,=A(CMDEXPL,CMDEXPLN)                               00712000
         WRTERM (R1),(R2),EDIT=LONG                                     00713000
         B     PAREXIT8                                                 00714000
*                                                                       00715000
*        TRT table for value fileid characters.                         00716000
TABVFILE DS    0XL256                                                   00717000
*                 0 1 2 3 4 5 6 7 8 9 A B C D E F                       00718000
         DC    X'FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF'  0                   00719000
         DC    X'FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF'  1                   00720000
         DC    X'FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF'  2                   00721000
         DC    X'FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF'  3                   00722000
         DC    X'00FFFFFFFFFFFFFFFFFFFFFFFFFF00FF'  4  +                00723000
         DC    X'FFFFFFFFFFFFFFFFFFFFFF00FFFFFFFF'  5  $                00724000
         DC    X'00FFFFFFFFFFFFFFFFFFFFFFFF00FFFF'  6  -_               00725000
         DC    X'FFFFFFFFFFFFFFFFFFFF000000FFFFFF'  7  :#@              00726000
         DC    X'FF000000000000000000FFFFFFFFFFFF'  8  abcdefghi        00727000
         DC    X'FF000000000000000000FFFFFFFFFFFF'  9  jklmnopqr        00728000
         DC    X'FFFF0000000000000000FFFFFFFFFFFF'  A  stuvwxyz         00729000
         DC    X'FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF'  B                   00730000
         DC    X'FF000000000000000000FFFFFFFFFFFF'  C  ABCDEFGHI        00731000
         DC    X'FF000000000000000000FFFFFFFFFFFF'  D  JKLMNOPQR        00732000
         DC    X'FFFF0000000000000000FFFFFFFFFFFF'  E  STUVWXYZ         00733000
         DC    X'00000000000000000000FFFFFFFFFFFF'  F  0123456789       00734000
         SPACE ,                                                        00735000
*********************************************************************** 00736000
*              Command syntax explanation text.                       * 00737000
*********************************************************************** 00738000
CMDEXPL  DC    C'VMARC Version ',AL1(C'0'+PGMVERSN),C'.'                00739000
         DC    AL1(C'0'+PGMRELSE),C'.',AL1(C'0'+PGMPTF/10)              00740000
         DC    AL1(C'0'+PGMPTF-10*(PGMPTF/10))                          00741000
         DC    X'15',C'Usage:'                                          00742000
         DC    X'15',C'   VMARC  function  fileid(s)  (  options...'    00743000
         DC    X'15',C'Functions:'                                      00744000
         DC    X'15',C'   PACK   infileid  <outfileid>'                 00745000
         DC    X'15',C'   UNPK  <infileid> <outfileid>'                 00746000
         DC    X'15',C'   LIST   infileid'                              00747000
         DC    X'15',C'Options:'                                        00748000
         DC    X'15',C'   Lzw | S2 | STore    TRace | NOTrace'          00749000
         DC    X'15',C'   REPlace | NOReplac  OLDDate | NEWDate'        00750000
         DC    X'15',C'   APPend | NOAppend   BLock nnnn'               00751000
         DC    X'15',C'   TAPn                PUnch | PRint'            00752000
         DC    X'15',C'   REader              FIfo | LIfo'              00753000
CMDEXPLN EQU   *-CMDEXPL                                                00754000
*********************************************************************** 00755000
*                                                                     * 00756000
*              Command table.                                         * 00757000
*                                                                     * 00758000
*********************************************************************** 00759000
CMDTABLE DS    0C                                                       00760000
UNPK     CMD 2,(OLDD,TRAC),(REPL,OLDD,TRAC,IGNR,STCK,TAPE,DEVI,HOLD)    00761000
UNPACK   CMD 2,(OLDD,TRAC),(REPL,OLDD,TRAC,IGNR,STCK,TAPE,DEVI,HOLD)    00762000
PACK     CMD 1,(PACK,TRAC),                                            X00763000
               (S2,ASIS,REPL,BLK,TRAC,STCK,TAPE,PRT,DEVO,APP)           00764000
LIST     CMD 1,(TRAC,LIST,HOLD),(STCK,TAPE,DEVI)                        00765000
*                                                                       00766000
*  The following are provided for compatibility with earlier release.   00767000
LOAD     CMD 1,(DEVI,OLDD,TRAC,REPL),(REPL,OLDD,TRAC,IGNR,STCK,HOLD)    00768000
TLOAD    CMD 2,(DEVI,TAPE,OLDD,TRAC),(TAPE,REPL,OLDD,TRAC,IGNR,STCK)    00769000
DUMP     CMD 1,(PACK,DEVO,TRAC),(PRT,S2,ASIS,BLK,TRAC,STCK,DEVO,PRT)    00770000
TDUMP    CMD 2,(PACK,DEVO,TAPE,TRAC),(TAPE,S2,ASIS,BLK,TRAC,STCK,DEVO)  00771000
CMDTABEN EQU   *-1                                                      00772000
*********************************************************************** 00773000
*                                                                     * 00774000
*                  Option table.                                      * 00775000
*                                                                     * 00776000
*********************************************************************** 00777000
OPTTABLE DS    0C                                                       00778000
*  Compaction methods.                                                  00779000
S2       OPTN  2,(S2),(ASIS),(S2,ASIS)        S2 compaction method.     00780000
LZW      OPTN  2,,(S2,ASIS),(S2,ASIS)         LZW compaction method.    00781000
ASIS     OPTN  2,(ASIS),(S2),(S2,ASIS)        Nil compaction method.    00782000
STORE    OPTN  3,(ASIS),(S2),(S2,ASIS)        Synonym for ASIS.         00783000
*  Output file disposition.                                             00784000
REPLACE  OPTN  2,(REPL),(APP),(REPL)          Overwrite allowed.        00785000
NOREPLAC OPTN  3,,(REPL),(REPL)               Overwrite not allowed.    00786000
NEWFILE  OPTN  4,,(REPL),(REPL)               Synonym for NOREPLAC      00787000
APPEND   OPTN  2,(APP),(REPL),(APP,REPL)      Append to existing.       00788000
NOAPPEND OPTN  3,,(APP),(APP,REPL)            Do not append.            00789000
OLDDATE  OPTN  3,(OLDD),,(OLDD)               Use original time stamp.  00790000
NEWDATE  OPTN  4,,(OLDD),(OLDD)               Use current time stamp.   00791000
IGNORE   OPTN  3,(IGNR),,(IGNR)               Ignore original names.    00792000
NOIGNORE OPTN  3,,(IGNR),(IGNR)               Use original names.       00793000
BLOCK    OPTN  1,(BLK),,(BLK),0               Specify record length.    00794000
BLKSIZE  OPTN  1,(BLK),,(BLK),0               Synonym for BLOCK         00795000
*  Message disposition.                                                 00796000
TRACE    OPTN  1,(TRAC),,(TRAC)               Generate trace message.   00797000
NOTRACE  OPTN  3,,(TRAC),(TRAC)               Suppress trace message.   00798000
STACK    OPTN  3,(FIFO),(LIFO),(FIFO,LIFO)    Synonym for FIFO.         00799000
NOSTACK  OPTN  5,,(FIFO,LIFO),(FIFO,LIFO)     Write trace to terminal.  00800000
FIFO     OPTN  2,(FIFO),(LIFO),(FIFO,LIFO)    Stack trace message.      00801000
LIFO     OPTN  2,(LIFO),(FIFO),(FIFO,LIFO)    Stack trace message.      00802000
*  Device specification.                                                00803000
DISK     OPTN  2,,,(TAPE)                     Files on disk.            00804000
READER   OPTN  2,(DEVI),(TAPE),(DEVI,TAPE)    Input from card reader.   00805000
RDR      OPTN  2,(DEVI),(TAPE),(DEVI,TAPE)    Synonym for READER.       00806000
HOLD     OPTN  2,(HOLD),,(HOLD)               Unconditionally hold rdr. 00807000
NOHOLD   OPTN  2,,(HOLD),(HOLD)               Normal hold processing.   00808000
PRINTER  OPTN  2,(DEVO,PRT),,(DEVO,PRT,TAPE)  Write to line printer.    00809000
PRT      OPTN  2,(DEVO,PRT),,(DEVO,PRT,TAPE)  Synonym for PRINTER.      00810000
PUNCH    OPTN  2,(DEVO),(PRT),(DEVO,PRT,TAPE) Write to card punch.      00811000
TAP1     OPTN  2,(TAPE),,(TAPE),4             Read/write TAP1.          00812000
TAP2     OPTN  2,(TAPE),,(TAPE),4             Read/write TAP2.          00813000
TAP3     OPTN  2,(TAPE),,(TAPE),4             Read/write TAP3.          00814000
TAP4     OPTN  2,(TAPE),,(TAPE),4             Read/write TAP4.          00815000
TAPE     OPTN  2,(TAPE),,(TAPE),4             Synonym for TAP1.         00816000
OPTTABEN EQU   *-1                                                      00817000
         TITLE '--  OPENALL  Open input && output files for processing' 00818000
*********************************************************************** 00819000
OPENALL  CSECT                                                        * 00820000
*                       Open files for processing.                    * 00821000
*                                                                     * 00822000
*********************************************************************** 00823000
         IENTER ,                                                       00824000
         TM    WRKFLAGA,WRKAOPNI   Is input file already open?          00825000
         BO    INFIRST             --yes, go get first record.          00826000
         TM    WRKOPTN2,WRK2DEVI   Input other than disk?               00827000
         BO    INDEVICE            --yes, go build device plist.        00828000
         OC    WRKFIDPT,WRKFIDPT   Has fileid list been build?          00829000
         BNZ   INDISK              --yes, go open next file.            00830000
*********************************************************************** 00831000
*                                                                     * 00832000
*              First time initialization for disk input.              * 00833000
*                                                                     * 00834000
*  Use the GETFST system function to identify all of the candidates   * 00835000
*  for input files.  Match the fileids against the pattern provided   * 00836000
*  in the command line.  Build a list of all matching fileids.        * 00837000
*                                                                     * 00838000
*********************************************************************** 00839000
         MVC   WRKGSTFN,=CL8'*'    Set up fileid for GETFST call.       00840000
         MVC   WRKGSTFT,=CL8'*'    ..                                   00841000
         MVC   WRKGSTFM,WRKINFM    ..                                   00842000
         MVC   WRKPATID,WRKINID    Set up pattern for WILD call.        00843000
*********************************************************************** 00844000
*              Search for first input file.                           * 00845000
*********************************************************************** 00846000
         SSM   DISABLE             * * * * * * * * * * * * * * * * * *  00847000
         GETFST WRKGSTID-8,F       Get FST for first file.              00848000
         SSM   ENABLE              * * * * * * * * * * * * * * * * * *  00849000
         LTR   R15,R15             Did GETFST return normally?          00850000
         BNZ   INERRGET                                                 00851000
INGOTFST DS    0H                                                       00852000
         LR    R2,R0               Address of ADT.                      00853000
         LR    R3,R1               Address of FST.                      00854000
         USING ADTSECT,R2                                               00855000
         USING FSTSECT,R3                                               00856000
         MVC   WRKTSTFN,FSTN       Set up fileid for pattern match.     00857000
         MVC   WRKTSTFT,FSTT       ..                                   00858000
         CLC   =C'VMARC   CMSUT',WRKTSTFN  Test for reserved name.      00859000
         BE    INGETNXT            Skip reserved fileid.                00860000
         BAL   R14,WILD            Does fileid match input pattern?     00861000
         BNZ   INGETNXT            --No match.                          00862000
*********************************************************************** 00863000
*              Extract basic input file information.                  * 00864000
*********************************************************************** 00865000
         GETMAIN R,LV=FIDDLEN      Allocate new FIDDSECT.               00866000
         LA    R1,0(,R1)                                                00867000
         USING FIDDSECT,R1                                              00868000
         MVC   FIDFN,FSTN          Remember input fileid.               00869000
         MVC   FIDFT,FSTT          ..                                   00870000
         MVC   FIDFM(1),ADTM       ..                                   00871000
         MVC   FIDFM+1(1),FSTM+1   ..                                   00872000
         MVC   FIDFV,FSTFV         Remember record format.              00873000
         MVC   FIDIL,FSTIL         Remember item length.                00874000
*********************************************************************** 00875000
*              Extract date-last-updated information.                 * 00876000
*********************************************************************** 00877000
         TM    ADTFLG4,ADTEDF      EDF disk?                            00878000
         BO    INSETEDF                                                 00879000
*  Extract non-EDF date information.                                    00880000
         PACK  FIDADATI(1),FSTYR   YY.                                  00881000
         MVC   FIDADATI+1(4),FSTD    MMDD, HHMM.                        00882000
         MVI   FIDADATI+5,X'00'                SS.                      00883000
         B     INSETOUT                                                 00884000
*  Extract EDF data information.                                        00885000
INSETEDF DS    0H                                                       00886000
         MVC   FIDADATI,FSTADATI   YYMMDD, HHMMSS.                      00887000
         DROP  R3                                                       00888000
*********************************************************************** 00889000
*              Determine the output fileid we should use.             * 00890000
*********************************************************************** 00891000
INSETOUT DS    0H                                                       00892000
         MVC   FIDOUTID,WRKOUTID   Output fileid.                       00893000
         CLI   FIDOUTFN,C'='       Filename derived from input?         00894000
         BNE   *+L'*+6                                                  00895000
         MVC   FIDOUTFN,FIDFN      --yes, substitute input filename.    00896000
         CLI   FIDOUTFT,C'='       Filetype derived from input?         00897000
         BNE   *+L'*+6                                                  00898000
         MVC   FIDOUTFT,FIDFT      --yes, substitute input filetype.    00899000
         CLI   FIDOUTFM,C'='       Filemode derived from input?         00900000
         BNE   *+L'*+6                                                  00901000
         MVC   FIDOUTFM,FIDFM      --yes, substitute input filemode.    00902000
         DROP  R1                                                       00903000
*********************************************************************** 00904000
*              Add new FIDDSECT to existing chain.                    * 00905000
*********************************************************************** 00906000
         LA    R4,WRKFIDPT-FIDFIDPT+FIDDSECT  Head of chain.            00907000
         USING FIDDSECT,R4                                              00908000
INFSTQLP DS    0H                                                       00909000
         LR    R3,R4               Remember previous FIDDSECT.          00910000
         L     R4,FIDFIDPT         Follow the chain.                    00911000
         LTR   R4,R4               Are we at the end?                   00912000
         BNP   INFSTENQ            --yes, add new one here.             00913000
         CLC   FIDOUTID,FIDOUTID-FIDDSECT(R1)  Test FIDDSECT order.     00914000
         BNH   INFSTQLP            Try next FIDDSECT.                   00915000
INFSTENQ DS    0H                                                       00916000
         ST    R1,FIDFIDPT-FIDDSECT(,R3)  Add new FIDDSECT to chain.    00917000
         ST    R4,FIDFIDPT-FIDDSECT(,R1)  ..                            00918000
         DROP  R4                                                       00919000
*********************************************************************** 00920000
*              Try to find another input file.                        * 00921000
*********************************************************************** 00922000
INGETNXT DS    0H                                                       00923000
         SSM   DISABLE             * * * * * * * * * * * * * * * * * *  00924000
         GETFST WRKGSTID-8,N,ADT=(R2)  Ask for another file.            00925000
         SSM   ENABLE              * * * * * * * * * * * * * * * * * *  00926000
         LTR   R15,R15             Did we find another file?            00927000
         BZ    INGOTFST                                                 00928000
         DROP  R2                                                       00929000
*                                                                       00930000
*  GETFST failed.  See if it failed for an acceptable reason.           00931000
INERRGET DS    0H                                                       00932000
         CH    R15,=H'1'           "File not found"?                    00933000
         BNE   INERFST             --no, something bad.                 00934000
         OC    WRKFIDPT,WRKFIDPT   Any files found at all?              00935000
         BNE   INDISK2             --yep, go process the first.         00936000
         WRTERM 'Input file not found.'                                 00937000
         LA    R15,28                                                   00938000
         B     OPNEXIT                                                  00939000
INERFST  DS    0H                                                       00940000
         LR    R3,R15                                                   00941000
         LINEDIT TEXT='Unexpected error from GETFST.  RC=..',          X00942000
               SUB=(DEC,(R3))                                           00943000
         LR    R15,R3                                                   00944000
         B     OPNEXIT                                                  00945000
*********************************************************************** 00946000
*  Input is from the card reader or tape drive.                       * 00947000
*********************************************************************** 00948000
INDEVICE DS    0H                                                       00949000
         OI    WRKFLAGA,WRKAFIXI   Set fixed-length input.              00950000
         TM    WRKOPTN2,WRK2TAPE   Tape input?                          00951000
         BZ    INCARDS             --no, must be reader.                00952000
*********************************************************************** 00953000
*  Input is from the tape drive.                                      * 00954000
*********************************************************************** 00955000
INTAPE   DS    0H                                                       00956000
         MVC   WRKIPCMD,=CL8'TAPEIO'  Set plist function code.          00957000
         MVC   WRKIPTRD,=CL8'READ' Tape function.                       00958000
         L     R0,=A(32760+7/8*8)  Maximum tape size allowed.           00959000
         ST    R0,WRKIPTBL         Save buffer size in plist.           00960000
         ST    R0,WRKIBUFL         Save size for FREEMAIN.              00961000
         GETMAIN R,LV=(0)          Allocate buffer storage.             00962000
         ST    R1,WRKIPTAP         Save buffer address in plist         00963000
         ST    R1,WRKIBUFF         Save address for FREEMAIN.           00964000
         B     INFIRST                                                  00965000
*********************************************************************** 00966000
*  Input is from the card reader.                                     * 00967000
*********************************************************************** 00968000
INCARDS  DS    0H                                                       00969000
         MVC   WRKIPCMD,=CL8'CARDRD'  Set plist function code.          00970000
         LA    R0,200              Size of extra-big buffer.            00971000
         STH   R0,WRKIPCRL         Save buffer size in plist.           00972000
         ST    R0,WRKIBUFL         Save size for FREEMAIN.              00973000
         GETMAIN R,LV=(0)          Allocate buffer storage.             00974000
         ST    R1,WRKIPCRD         Save buffer address in plist.        00975000
         MVI   WRKIPCFL,X'80'      Flag explicit length request.        00976000
         ST    R1,WRKIBUFF         Save address for FREEMAIN.           00977000
*  Save current spooling characteristics of reader.                     00978000
         LA    R0,INCQRY           Query Virtual 00C.                   00979000
         LA    R2,L'INCQRY         Length of command.                   00980000
         O     R2,=X'40000000'     Request buffered result.             00981000
         LA    R1,WRKCPANS         Response area.                       00982000
         LA    R3,L'WRKCPANS       ..and its length.                    00983000
         DC    0H'0',AL.4(8,3,R0,R2),X'0008'                            00984000
         BNZ   INCERQRY                                                 00985000
         LTR   R2,R2                                                    00986000
         BNZ   INCERQRY                                                 00987000
         MVC   WRKRCRES,WRKCPANS+4 Set up command to restore reader.    00988000
         MVC   WRKRCCMD,=C'SPOOL'  ..                                   00989000
*  Change reader characteristics to HOLD.                               00990000
         LA    R0,INCHOLD          SPOOL RDR HOLD command.              00991000
         LA    R2,L'INCHOLD        ..and it's length.                   00992000
         DC    0H'0',AL.4(8,3,R0,R2),X'0008'                            00993000
         LTR   R2,R2                                                    00994000
         BNZ   INCERHLD                                                 00995000
*  Determine the spoolid of the current reader file.  For VM/SP 5 and   00996000
*  above, we could use DIAG X'BC', but since this is dropped in VM/XA   00997000
*  we'll use the clumsy method of yore:  Read one record from the       00998000
*  reader; close the reader; query reader; parse command response.      00999000
         LA    R1,WRKIPLST         Input plist.                         01000000
         SVC   202                 Read first record.                   01001000
         DC    AL4(1)              --handle error condition later.      01002000
         LA    R0,OPRCLOSE         CP CLOSE command                     01003000
         LA    R2,L'OPRCLOSE       ..                                   01004000
         DC    0H'0',AL.4(8,3,R0,R2),X'0008'                            01005000
         MVC   WRKCPCMD(OPRQRYLN),OPRQRY                                01006000
         MVC   WRKCPCMD+OPRQRYLN(1),WRKRCCLS  Spool class.              01007000
         LA    R0,WRKCPCMD         CP QUERY command.                    01008000
         LA    R2,OPRQRYLN+1       ..its length.                        01009000
         CLI   WRKRCCLS,C'*'                                            01010000
         BNE   *+L'*+4                                                  01011000
         LA    R2,L'OPRQRY         ..unless class is *.                 01012000
         O     R2,=X'40000000'     Indicate response buffer present.    01013000
         LA    R1,WRKCPANS         CP command response buffer.          01014000
         LA    R3,L'WRKCPANS       ..its length                         01015000
         DC    0H'0',AL.4(8,3,R0,R2),X'0008'                            01016000
         MVC   WRKRCSP,WRKCPANS+76+10  Get spoolid from response.       01017000
         B     INFIRST                                                  01018000
INCERHLD DS    0H                                                       01019000
         LINEDIT TEXT='Unexpected error holding reader.  RC=..',       X01020000
               SUB=(DEC,(R2))                                           01021000
         B     OPNEXIT8                                                 01022000
INCERQRY DS    0H                                                       01023000
         LINEDIT TEXT='Unexpected error querying reader.  RC=..',      X01024000
               SUB=(DEC,(R2))                                           01025000
         B     OPNEXIT8                                                 01026000
*                                                                       01027000
INCQRY   DC    C'Q V 00C'                                               01028000
INCHOLD  DC    C'SP RDR HOLD'                                           01029000
OPRQRY   DC    C'Q RDR * NOHOLD ALL'                                    01030000
         DC    C' CLASS '                                               01031000
OPRQRYLN EQU   *-OPRQRY                                                 01032000
OPRCLOSE DC    C'CL 00C HOLD'                                           01033000
         DC    C' NOKEEP'          Added CLOSE operand for VM/XA.       01034000
OPRCLOXA EQU   *-OPRCLOSE                                               01035000
*********************************************************************** 01036000
*  Input is from a disk file.                                         * 01037000
*********************************************************************** 01038000
INDISK   DS    0H                                                       01039000
         L     R2,WRKFIDPT         Address of previous FIDDSECT.        01040000
         USING FIDDSECT,R2                                              01041000
         L     R0,FIDFIDPT         Address of next FIDDSECT.            01042000
         ST    R0,WRKFIDPT         Remember it as the current FIDDSECT. 01043000
         FREEMAIN R,A=(R2),LV=FIDDLEN  Release previous FIDDSECT.       01044000
INDISK2  DS    0H                                                       01045000
         L     R2,WRKFIDPT         Current FIDDSECT.                    01046000
         LTR   R2,R2                                                    01047000
         BNP   OPNEXIT4            --All out of files.                  01048000
         MVC   WRKIPID,FIDID       Set up input fileid.                 01049000
         MVC   WRKFINID,FIDOUTID   Output fileid.                       01050000
         MVC   WRKIPCMD,=CL8'RDBUF'                                     01051000
         MVC   WRKIPFV,FIDFV       Input record format.                 01052000
         NI    WRKFLAGA,X'FF'-WRKAFIXI  Assume recfm is V.              01053000
         CLI   WRKIPFV,C'V'        Test assumption.                     01054000
         BE    *+L'*+4                                                  01055000
         OI    WRKFLAGA,WRKAFIXI   No, recfm is really F.               01056000
         MVI   WRKIPEXT,FSTEPL     Mark it as an extended plist.        01057000
         MVC   WRKIPNIT,=F'1'      Number of items=1.                   01058000
         MVC   WRKADATI,FIDADATI   Get time stamp YYMMDD, HHMMSS.       01059000
         L     R1,FIDIL            Size of buffer needed.               01060000
         ST    R1,WRKIPBLN         Save size in plist.                  01061000
         LA    R0,7(,R1)                                                01062000
         N     R0,=F'-8'           Adjust size to an octet boundary.    01063000
         ST    R0,WRKIBUFL         Save size for FREEMAIN.              01064000
         GETMAIN R,LV=(0)          Allocate buffer storage.             01065000
         ST    R1,WRKIPBPT         Save buffer address in plist.        01066000
         ST    R1,WRKIBUFF         ..and for FREEMAIN.                  01067000
*                                                                       01068000
*  Determine if this is part of a multi-input append.                   01069000
         TM    WRKOPTN1,WRK1PACK   Creating an archive?                 01070000
         BZ    INFIRST             --no.                                01071000
         L     R2,FIDFIDPT         Peek ahead at next FIDDSECT entry.   01072000
         LTR   R2,R2               Is there another?                    01073000
         BNP   INFIRST             --no.                                01074000
         CLC   WRKFINID,FIDOUTID   Next output to same file?            01075000
         BNE   INFIRST             --no.                                01076000
         OI    WRKFLAGB,WRKBLEAV   --yes, delay close on output file.   01077000
         DROP  R2                                                       01078000
*        B     INFIRST                                                  01079000
         EJECT ,                                                        01080000
*********************************************************************** 01081000
*  Read the very first input record.                                  * 01082000
*********************************************************************** 01083000
INFIRST  DS    0H                                                       01084000
         XC    WRKNDXIN,WRKNDXIN   Initialize buffer index.             01085000
         XC    WRKKODIN,WRKKODIN   Initialize input byte counter.       01086000
         OI    WRKFLAGA,WRKAOPNI   Mark input as open.                  01087000
         BAL   RLINK,GETRECRD      Read the first input record.         01088000
         BZ    OUTINIT                                                  01089000
*                                                                       01090000
*  Endfile.  Close this file then try another.                          01091000
         ICALL INCLOSE                                                  01092000
         LTR   R15,R15                                                  01093000
         BNZ   OPNEXIT8                                                 01094000
         TM    WRKOPTN2,WRK2DEVI   Device input?                        01095000
         BO    OPNEXIT4            --yes, no other input to process.    01096000
         MVI   WRKFLAGB,X'00'      Reset file status flags.             01097000
         B     INDISK              Try for another input file.          01098000
         EJECT                                                          01099000
*********************************************************************** 01100000
*                                                                     * 01101000
*                       Open output file.                             * 01102000
*                                                                     * 01103000
*********************************************************************** 01104000
OUTINIT  DS    0H                                                     * 01105000
         XC    WRKNDXOU,WRKNDXOU   Reset buffer index.                  01106000
         XC    WRKKODOU,WRKKODOU   Reset byte counter.                  01107000
         TM    WRKFLAGA,WRKAOPNO   Is output file already open?         01108000
         BO    OUTFIRST            --yes, go set up for 1st write.      01109000
         TM    WRKOPTN2,WRK2DEVO   Output to a device?                  01110000
         BO    OUTDEVIC            --yes, go set-up device.             01111000
*********************************************************************** 01112000
*              Open disk file for output.                             * 01113000
*********************************************************************** 01114000
OUTDISK  DS    0H                                                       01115000
         TM    WRKOPTN1,WRK1PACK   Compacting?                          01116000
         BO    OUTRESOL            --Yes, resolve output fileid.        01117000
*                                                                       01118000
*  During uncompaction, output fileid taken from header.                01119000
         L     R2,WRKIBUFF         Address of the input buffer.         01120000
         USING HEADER,R2                                                01121000
         LA    R0,HDRDLEN          Length of the header.                01122000
         ST    R0,WRKNDXIN         Advance buffer index that much.      01123000
         CLC   HDRID,=CL8':CFF'    Inspect header.                      01124000
         BNE   INERRHD                                                  01125000
         CLC   HDRVERSN,=AL1(PGMVERSN,PGMRELSE) ..Correct version?      01126000
         BH    INERVER                                                  01127000
         MVC   WRKFINID,HDRFILED  Extract original fileid.              01128000
         MVC   WRKFINFM(1),WRKOUTFM   ..with disk corrected.            01129000
         TM    WRKOPTN2,WRK2IGNR   Ignore original fileid?              01130000
         BZ    OUTHDRFV                                                 01131000
         MVC   WRKFINID(16),=CL16'FILEXXXXVMARCOUT'                     01132000
         AP    WRKIDCNT,=P'1'      Update file counter.                 01133000
         UNPK  WRKFINID+4(4),WRKIDCNT                                   01134000
         OI    WRKFINID+7,X'F0'                                         01135000
OUTHDRFV DS    0H                                                       01136000
         MVC   WRKOPFV,HDRRECFM    Record format.                       01137000
         LH    R0,HDRLRECL         Record length.                       01138000
         N     R0,=A(X'FFFF')      (unsigned halfword.)                 01139000
         ST    R0,WRKOPBSZ         Save buffer size in plist.           01140000
         MVC   WRKADATI,HDRADATI   Get file time stamp.                 01141000
         NI    WRKOPTN1,X'FF'-WRK1COMP  Assume LZW compaction.          01142000
         TM    HDRFLAGS,HDRFASIS   Store method?                        01143000
         BZ    *+L'*+4             --no.                                01144000
         OI    WRKOPTN1,WRK1ASIS   --yes, remember method.              01145000
         TM    HDRFLAGS,HDRFS2     S2 method?                           01146000
         BZ    *+L'*+4             --no.                                01147000
         OI    WRKOPTN1,WRK1S2     --yes, remember method.              01148000
         NI    WRKFLAGB,X'FF'-WRKBSKIP   Kill skip indicator.           01149000
         MVC   WRKTSTID,HDRFILED   Actual name of member.               01150000
         MVC   WRKPATID,WRKOUTID   Selection pattern.                   01151000
         BAL   R14,WILD            Does member match pattern?           01152000
         BZ    OUTSTATE                                                 01153000
OUTSKIP  DS    0H                                                       01154000
         OI    WRKFLAGA,WRKAHOLD   One or more members skipped.         01155000
         OI    WRKFLAGB,WRKBSKIP   Set skip indicator.                  01156000
         B     OPNEXIT0                                                 01157000
         DROP  R2                                                       01158000
*                                                                       01159000
*  Packing to a disk file.                                              01160000
OUTRESOL DS    0H                                                       01161000
         MVI   WRKOPFV,C'F'        All records are fixed length.        01162000
         MVC   WRKOPBSZ,WRKBLKSZ   Set buffer size.                     01163000
*                                                                       01164000
*  Check for an already existing output file.                           01165000
OUTSTATE DS    0H                                                       01166000
         TM    WRKOPTN2,WRK2LIST   Just list output file names?         01167000
         BO    OPNEXIT0            --yes, bypass file open.             01168000
         MVC   WRKESCMD,=CL8'ESTATEW'                                   01169000
         MVC   WRKESSTR,=CL4'****' Disallow wild-cards.                 01170000
         MVC   WRKESID,WRKFINID                                         01171000
         LA    R1,WRKESLST                                              01172000
         SVC   202                 ESTATEW.                             01173000
         DC    AL4(*+4)                                                 01174000
         TM    WRKOPTN1,WRK1APP    Appending?                           01175000
         BO    OUTAPP              --yes.                               01176000
         CH    R15,=H'28'          File does not exist?                 01177000
         BE    OUTSETID            --yep.                               01178000
         LTR   R15,R15             File does exist, writable?           01179000
         BNZ   OUTEREST            --Anything else is bad.              01180000
*  File already exists.                                                 01181000
OUTREPL  DS    0H                                                       01182000
         TM    WRKOPTN1,WRK1REPL   Replace allowed?                     01183000
         BNZ   OUTSETID            --yes, but use temp fileid for now.  01184000
         B     OUTERREP            --Mustn't overwrite existing file.   01185000
*  Special action if appending to existing file.                        01186000
OUTAPP   DS    0H                                                       01187000
         CH    R15,=H'28'          Does file exist?                     01188000
         BE    OUTAPPID            --no, so we'll create it.            01189000
         LTR   R15,R15             File does exist, writable?           01190000
         BNZ   OUTEREST            --Anything else is bad.              01191000
         L     R1,WRKESSTR         Get FSTSECT address.                 01192000
         USING FSTSECT,R1                                               01193000
         CLI   FSTFV,C'F'          Sanity check for existing archive.   01194000
         BNE   OUTERAP2                                                 01195000
         MVC   WRKOPBSZ,FSTIL      Lrecl of existing file.              01196000
         DROP  R1                                                       01197000
OUTAPPID DS    0H                                                       01198000
         CLC   WRKIPID(17),WRKFINID  Input fileid = output fileid?      01199000
         BE    OUTERAPP            --yes, cannot append to input.       01200000
         MVC   WRKOPFID,WRKFINID   Use actual output fileid.            01201000
         B     OUTFINAL                                                 01202000
OUTSETID DS    0H                                                       01203000
         MVC   WRKERID(16),=CL16'VMARC   CMSUT1'  Temp fileid.          01204000
         MVC   WRKERFM,WRKFINFM    ..                                   01205000
         CLC   WRKIPID(17),WRKFINID  Input fileid = output fileid?      01206000
         BNE   OUTERASE            --no, normal processing.             01207000
         TM    WRKOPTN1,WRK1PACK   Packing?                             01208000
         BO    OUTERASE            --yes, normal processing.            01209000
*                                                                       01210000
*  Normal ERASE/RENAME at close must be delayed to protect input file.  01211000
         MVI   WRKERFT+5,C'2'      Use CMSUT2 for this output file.     01212000
         OI    WRKFLAGA,WRKASAME   Remember delayed ERASE/RENAME.       01213000
OUTERASE DS    0H                                                       01214000
         MVC   WRKERCMD,=CL8'ERASE'                                     01215000
         LA    R1,WRKERLST                                              01216000
         SVC   202                 ERASE.                               01217000
         DC    AL4(*+4)                                                 01218000
         MVC   WRKOPFID,WRKERID    Output fileid.                       01219000
OUTFINAL DS    0H                                                       01220000
         MVC   WRKOPCMD,=CL8'WRBUF'                                     01221000
         MVI   WRKOPEXT,FSTEPL     Mark it as an extended plist.        01222000
         MVC   WRKOPNIT,=F'1'      Item count = 1.                      01223000
         L     R1,WRKOPBSZ         Output buffer size.                  01224000
         LA    R0,7(,R1)                                                01225000
         N     R0,=F'-8'           Align with octet boundary.           01226000
         ST    R0,WRKOBUFL         Save size for FREEMAIN.              01227000
         GETMAIN R,LV=(0)          Allocate output buffer.              01228000
         ST    R1,WRKOPBPT         Save buffer address in plist.        01229000
         ST    R1,WRKOBUFF         Save address for FREEMAIN.           01230000
         NI    WRKFLAGA,X'FF'-WRKAFIXO  Assume recfm is V.              01231000
         CLI   WRKOPFV,C'V'        Test assumption.                     01232000
         BE    OUTFIRST            --yes, recfm is V.                   01233000
         OI    WRKFLAGA,WRKAFIXO   --no, it's really F.                 01234000
         B     OUTFIRST                                                 01235000
*********************************************************************** 01236000
*              Output is to a device.                                 * 01237000
*********************************************************************** 01238000
OUTDEVIC DS    0H                                                       01239000
         TM    WRKOPTN2,WRK2TAPE   Tape output?                         01240000
         BO    OUTTAPE                                                  01241000
         TM    WRKOPTN2,WRK2PRT    Printer output?                      01242000
         BO    OUTPRINT                                                 01243000
*********************************************************************** 01244000
*              Output is to the card punch.                           * 01245000
*********************************************************************** 01246000
OUTPUNCH DS    0H                                                       01247000
         MVC   WRKOPCMD,=CL8'CARDPH'                                    01248000
         LA    R0,80               Record length is 80.                 01249000
         ST    R0,WRKOPBSZ         ..                                   01250000
         ST    R0,WRKOBUFL         Save length for FREEMAIN.            01251000
         GETMAIN R,LV=(0)          Allocate output buffer.              01252000
         ST    R1,WRKOBUFF         Save address for FREEMAIN.           01253000
         ST    R1,WRKOPCRD         Save address in plist.               01254000
         B     OUTFIRST                                                 01255000
*********************************************************************** 01256000
*              Output is to a tape drive.                             * 01257000
*********************************************************************** 01258000
OUTTAPE  DS    0H                                                       01259000
         MVC   WRKOPCMD,=CL8'TAPEIO'                                    01260000
         MVC   WRKOPTRD,=CL8'WRITE'                                     01261000
         L     R1,WRKBLKSZ         Requested block size.                01262000
         ST    R1,WRKOPBSZ         ..                                   01263000
         ST    R1,WRKOPTBL         Save buffer size in plist.           01264000
         LA    R0,7(,R1)                                                01265000
         N     R0,=F'-8'           Align with octet boundary.           01266000
         ST    R0,WRKOBUFL         Save length for FREEMAIN.            01267000
         GETMAIN R,LV=(0)          Allocate output buffer.              01268000
         ST    R1,WRKOBUFF         Save address for FREEMAIN.           01269000
         ST    R1,WRKOPTAP         Save address in plist.               01270000
         B     OUTFIRST                                                 01271000
*********************************************************************** 01272000
*              Output is to the line printer.                         * 01273000
*********************************************************************** 01274000
OUTPRINT DS    0H                                                       01275000
         MVC   WRKOPCMD,=CL8'PRINTR'                                    01276000
         LA    R1,132              We have 132 bytes of data.           01277000
         ST    R1,WRKOPBSZ         ..                                   01278000
         LA    R1,133              ..but actual lrecl is 133.           01279000
         STH   R1,WRKOPPLN         ..                                   01280000
         LA    R0,7(,R1)                                                01281000
         N     R0,=F'-8'           Align with octet boundary.           01282000
         ST    R0,WRKOBUFL         Save length for FREEMAIN.            01283000
         GETMAIN R,LV=(0)          Allocate output buffer.              01284000
         ST    R1,WRKOPPRT         Save address in plist.               01285000
         MVI   0(R1),X'09'         Set printer carriage control.        01286000
         LA    R1,1(,R1)           Data portion of buffer starts here.  01287000
         ST    R1,WRKOBUFF         ..                                   01288000
*        B     OUTFIRST                                                 01289000
*********************************************************************** 01290000
*              Initialize for first output record.                    * 01291000
*********************************************************************** 01292000
OUTFIRST DS    0H                                                       01293000
         OI    WRKFLAGA,WRKAOPNO   Mark output file as open.            01294000
         TM    WRKOPTN1,WRK1PACK   Packing?                             01295000
         BZ    OPNEXIT0            --no, just exit now.                 01296000
*                                                                       01297000
*  Construct the header for a compacted file.                           01298000
         L     R1,WRKOBUFF         Find output buffer.                  01299000
         USING HEADER,R1                                                01300000
         MVC   HDRID,=CL8':CFF'    Set header identifier.               01301000
         MVI   HDRVERSN,1          Our compaction methods haven't..     01302000
         MVI   HDRVERSN+1,0        ..changed much.  Version 1.0 is OK.  01303000
         MVC   HDRFILED,WRKIPID    Record original fileid.              01304000
         MVC   HDRRECFM,WRKIPFV    ..record format.                     01305000
         MVC   HDRLRECL,WRKIPBLN+2 ..record length.                     01306000
         MVC   HDRADATI,WRKADATI   ..time stamp.                        01307000
         MVI   HDRFLAGS,X'00'      Initialize method flags.             01308000
         TM    WRKOPTN1,WRK1ASIS   Store method selected?               01309000
         BZ    *+L'*+8             --no, skip.                          01310000
         OI    HDRFLAGS,HDRFASIS   Indicate store method.               01311000
         MVI   HDRVERSN+1,1        ..and up the version to 1.1.         01312000
         TM    WRKOPTN1,WRK1S2     S2 compaction selected?              01313000
         BZ    *+L'*+4             --no, skip.                          01314000
         OI    HDRFLAGS,HDRFS2     Indicate S2 method.                  01315000
         LA    R0,HDRDLEN                                               01316000
         ST    R0,WRKNDXOU         Advance output index.                01317000
         B     OPNEXIT0                                                 01318000
         DROP  R1                                                       01319000
OPNEXIT8 DS    0H                                                       01320000
         LA    R15,8               Set nasty return code.               01321000
         B     OPNEXIT                                                  01322000
OPNEXIT4 DS    0H                                                       01323000
         LA    R15,4               Set endfile return code.             01324000
         B     OPNEXIT                                                  01325000
OPNEXIT0 DS    0H                                                       01326000
         SR    R15,R15             Set normal return code.              01327000
*        B     OPNEXIT                                                  01328000
OPNEXIT  DS    0H                                                       01329000
         IEXIT ,                   Return to caller.                    01330000
INERRHD  DS    0H                                                       01331000
         WRTERM 'Invalid header for compacted file.'                    01332000
         B     OPNEXIT8                                                 01333000
INERVER  DS    0H                                                       01334000
         WRTERM 'Newer version of VMARC required for this file.'        01335000
         B     OPNEXIT8                                                 01336000
OUTEREST DS    0H                                                       01337000
         LR    R3,R15                                                   01338000
         LINEDIT TEXT='Unexpected error from ESTATEW.  RC=..',         X01339000
               SUB=(DEC,(R3))                                           01340000
         LR    R15,R3                                                   01341000
         B     OPNEXIT                                                  01342000
OUTERREP DS    0H                                                       01343000
         WRTERM 'Output file already exists.'                           01344000
         B     OPNEXIT8                                                 01345000
OUTERAPP DS    0H                                                       01346000
         WRTERM 'Cannot append to input file.'                          01347000
         B     OPNEXIT8                                                 01348000
OUTERAP2 DS    0H                                                       01349000
         WRTERM 'Output file has variable record format.'               01350000
         B     OPNEXIT8                                                 01351000
         TITLE '--  INCLOSE    Close the input file'                    01352000
*********************************************************************** 01353000
INCLOSE  CSECT                                                        * 01354000
*                       Close input file.                             * 01355000
*                                                                     * 01356000
*  1.  If input file not open or not at endfile, return quietly.      * 01357000
*  2.  Select closing action based on input type:                     * 01358000
*      Disk file:  Use FSCLOSE.                                       * 01359000
*      Tape:       No action required.                                * 01360000
*      Reader:     Use CP CLOSE RDR then restore the reader's         * 01361000
*                  characteristics saved when we opened it.  If       * 01362000
*                  all processing was normal, PURGE the file.         * 01363000
*                                                                     * 01364000
*********************************************************************** 01365000
         IENTER SA=B                                                    01366000
         TM    WRKFLAGA,WRKAOPNI   Is input file still open?            01367000
         BZ    INCEXIT0                                                 01368000
         TM    WRKFLAGB,WRKBENDI   Has end-file occurred?               01369000
         BZ    INCEXIT0                                                 01370000
         NI    WRKFLAGA,X'FF'-WRKAOPNI  Mark input as closed.           01371000
         L     R1,WRKIBUFF         Buffer address.                      01372000
         L     R0,WRKIBLEN         Buffer length.                       01373000
         FREEMAIN R,LV=(0),A=(1)   Liberate I/O buffer.                 01374000
         TM    WRKOPTN2,WRK2DEVI   Device input?                        01375000
         BZ    INCDISK             --no, go close disk file.            01376000
         TM    WRKOPTN2,WRK2TAPE   Tape input?                          01377000
         BO    INCTAPE             --yes.                               01378000
         B     INCRDR              --no, must be card reader.           01379000
*********************************************************************** 01380000
*              Close input file.                                      * 01381000
*********************************************************************** 01382000
INCDISK  DS    0H                                                       01383000
         FSCLOSE FSCB=WRKIPLST,ERROR=INCDERR                            01384000
         B     INCEXIT0                                                 01385000
*********************************************************************** 01386000
*              Close reader.                                          * 01387000
*********************************************************************** 01388000
INCRDR   DS    0H                                                       01389000
*  Close the reader.  The spool file will be retained because we        01390000
*  previously spooled the reader with the HOLD option.                  01391000
         LA    R0,INCRDRCP         CLOSE RDR command.                   01392000
         LA    R2,L'INCRDRCP       ..and its length.                    01393000
         DC    0H'0',AL.4(8,3,R0,R2),X'0008'                            01394000
         LTR   R2,R2                                                    01395000
         BNZ   INRERCLO                                                 01396000
*  Restore the correct HOLD/NOHOLD status to the reader.                01397000
         LA    R0,WRKRDRCP         Restore command.                     01398000
         LA    R2,WRKRCLEN         ..and its length.                    01399000
         DC    0H'0',AL.4(8,3,R0,R2),X'0008'                            01400000
         LTR   R2,R2                                                    01401000
         BNZ   INRERRES                                                 01402000
*  Retain spool file?                                                   01403000
         TM    WRKFLAGB,WRKBERR    Was processing in any way dirty?     01404000
         BO    INCEXIT0            --yep.                               01405000
         TM    WRKFLAGA,WRKAHOLD   Any members skipped?                 01406000
         BO    INCEXIT0            --yep.                               01407000
         TM    WRKOPTN2,WRK2LIST   List request?                        01408000
         BO    INCEXIT0            --yep.                               01409000
         TM    WRKOPTN3,WRK3HOLD   Explicit hold request?               01410000
         BO    INCEXIT0            --yep.                               01411000
         CLI   WRKRCHLD,C'H'       Reader spooled HOLD?                 01412000
         BE    INCEXIT0            --yep.                               01413000
*  Delete the file from the spool queue.                                01414000
         MVC   WRKCPCMD(L'INRPURGE),INRPURGE          CP PURGE command. 01415000
         MVC   WRKCPCMD+L'INRPURGE(L'WRKRCSP),WRKRCSP ..                01416000
         LA    R0,WRKCPCMD              Restore command.                01417000
         LA    R2,L'INRPURGE+L'WRKRCSP  ..and its length.               01418000
         O     R2,=X'40000000'     Indicate response buffer present.    01419000
         LA    R1,WRKCPANS         Response buffer.                     01420000
         LA    R3,L'WRKCPANS       ..and its length.                    01421000
         DC    0H'0',AL.4(8,3,R0,R2),X'0008'                            01422000
         LTR   R2,R2                                                    01423000
         BNZ   INRERPUR                                                 01424000
         B     INCEXIT0                                                 01425000
*********************************************************************** 01426000
*              Close tape.                                            * 01427000
*********************************************************************** 01428000
INCTAPE  DS    0H                                                       01429000
         B     INCEXIT0            No action required.                  01430000
*********************************************************************** 01431000
*              Handle error conditions.                               * 01432000
*********************************************************************** 01433000
INCDERR  DS    0H                                                       01434000
         LR    R3,R15                                                   01435000
         LINEDIT TEXT='Unexpected error closing input file.  RC=..',   X01436000
               SUB=(DEC,(R3))                                           01437000
         B     INCEXIT8                                                 01438000
INRERRES DS    0H                                                       01439000
         LINEDIT TEXT='Unexpected error restoring reader.  RC=..',     X01440000
               SUB=(DEC,(R2))                                           01441000
         B     INCEXIT8                                                 01442000
INRERPUR DS    0H                                                       01443000
         LINEDIT TEXT='Unexpected error purging reader.  RC=..',       X01444000
               SUB=(DEC,(R2))                                           01445000
         B     INCEXIT8                                                 01446000
INRERCLO DS    0H                                                       01447000
         LINEDIT TEXT='Unexpected error closing reader.  RC=..',       X01448000
               SUB=(DEC,(R2))                                           01449000
*        B     INCEXIT8                                                 01450000
*********************************************************************** 01451000
*              Return to caller.                                      * 01452000
*********************************************************************** 01453000
INCEXIT8 DS    0H                                                       01454000
         OI    WRKFLAGB,WRKBERR    Mark processing in error.            01455000
         LA    R15,8                                                    01456000
         B     INCEXIT                                                  01457000
INCEXIT0 DS    0H                                                       01458000
         SR    R15,R15             Set normal return code.              01459000
INCEXIT  DS    0H                                                       01460000
         IEXIT ,                   ..and return.                        01461000
         SPACE ,                                                        01462000
INCRDRCP DC    C'CLOSE 00C'                                             01463000
INRPURGE DC    C'PURGE RDR '                                            01464000
         TITLE '--  OUTCLOSE   Close the output file'                   01465000
*********************************************************************** 01466000
OUTCLOSE CSECT                                                        * 01467000
*                       Close output file.                            * 01468000
*                                                                     * 01469000
*  1.  In output file not open, return quietly.                       * 01470000
*  2.  Select closing action based on output type:                    * 01471000
*      Disk file:  a.  Use FSCLOSE.                                   * 01472000
*                  b.  If OLDDATE specified, modify creation date.    * 01473000
*                  c.  If fileid is VMARC CMSUT1, file must be        * 01474000
*                      renamed to its real fileid.                    * 01475000
*                      --Erase real fileid.                           * 01476000
*                      --Rename to real fileid.                       * 01477000
*                  b.  If this (or a previous output file) is named   * 01478000
*                      VMARC CMSUT2 and the input file is an eof,     * 01479000
*                      an output file (this or previous) has same     * 01480000
*                      fileid as the input.                           * 01481000
*                      --Erase input fileid.                          * 01482000
*                      --Rename VMARC CMSUT2 to input fileid.         * 01483000
*      Punch:      Use CP CLOSE PUN command.                          * 01484000
*      Printer:    Use CP CLOSE PRT command.                          * 01485000
*      Tape:       Write a tape mark then backspace over it.          * 01486000
*                                                                     * 01487000
*********************************************************************** 01488000
         IENTER ,                                                       01489000
         TM    WRKFLAGA,WRKAOPNO   Is output file still open?           01490000
         BZ    OUCDFIN             --no.                                01491000
         TM    WRKFLAGB,WRKBLEAV   Leave this file open for now?        01492000
         BO    OUCEXIT0            --yes.                               01493000
         NI    WRKFLAGA,X'FF'-WRKAOPNO  Mark output as closed.          01494000
         L     R1,WRKOBUFF         Buffer address.                      01495000
         N     R1,=F'-8'           Force correct boundary.              01496000
         L     R0,WRKOBLEN         Buffer length.                       01497000
         FREEMAIN R,LV=(0),A=(1)   Liberate I/O buffer.                 01498000
         TM    WRKOPTN2,WRK2DEVO   Output to a device?                  01499000
         BO    OUCDEVIC            --yes.                               01500000
*********************************************************************** 01501000
*              Close output file.                                     * 01502000
*********************************************************************** 01503000
OUCDISK  DS    0H                                                       01504000
         FSCLOSE FSCB=WRKOPLST,ERROR=OUCDERR                            01505000
*                                                                       01506000
*  Alter file creation date if OLDDDATE requested.                      01507000
         TM    WRKOPTN1,WRK1OLDD   Did user want old date?              01508000
         BZ    OUCREN                                                   01509000
         DMSKEY NUCLEUS            * * * * * * * * * * * * * * * * * *  01510000
         SSM   DISABLE              * * * * * * * * * * * * * * * * * * 01511000
         LA    R1,WRKOPLST         FSCB for output file.                01512000
         L     R15,VCFSTLKP        FST-lookup routine.                  01513000
         BALR  R14,R15                                                  01514000
         SSM   ENABLE               * * * * * * * * * * * * * * * * * * 01515000
         LTR   R15,R15             Do we have an FST?                   01516000
         BNZ   OUCERFST                                                 01517000
         LR    R4,R0               Address of ADT.                      01518000
         USING FSTSECT,R1                                               01519000
         USING ADTSECT,R4                                               01520000
         TM    ADTFLG4,ADTEDF      Is this an EDF disk?                 01521000
         BO    OUCEDF              --yes.                               01522000
*  Set creation date for non-EDF disk file.                             01523000
         UNPK  FSTYR,WRKADATI(1)   YY.                                  01524000
         MVC   FSTD(4),WRKADATI+1    MMDD, HHMM.                        01525000
         B     OUCEDFND                                                 01526000
*  Set creation date for EDF disk file.                                 01527000
OUCEDF   DS    0H                                                       01528000
         MVC   FSTADATI,WRKADATI   YYMMDD, HHMMSS.                      01529000
         DROP  R1,R4                                                    01530000
OUCEDFND DS    0H                                                       01531000
         DMSKEY RESET              * * * * * * * * * * * * * * * * * *  01532000
*                                                                       01533000
*  It is possible that the output fileid we are now creating also       01534000
*  qualified as an as-yet-unprocessed input file.  If so, remove        01535000
*  the input file from the FIDDSECT chain.                              01536000
         LA    R3,WRKFIDPT-FIDFIDPT+FIDDSECT  Head of chain.            01537000
         USING FIDDSECT,R3                                              01538000
OUCFIDLP DS    0H                                                       01539000
         LR    R2,R3               Remember previous.                   01540000
         L     R3,FIDFIDPT         Advance to next.                     01541000
         LTR   R3,R3               Test for no more.                    01542000
         BNP   OUCREN                                                   01543000
         CLC   WRKFINID(17),FIDID  Matching fileid?                     01544000
         BNE   OUCFIDLP                                                 01545000
         MVC   FIDFIDPT-FIDDSECT(L'FIDFIDPT),FIDFIDPT  Dequeue entry.   01546000
         FREEMAIN R,LV=FIDDLEN,A=(R3)  Liberate its storage.            01547000
         LR    R3,R2                                                    01548000
         B     OUCFIDLP                                                 01549000
*                                                                       01550000
OUCREN   DS    0H                                                       01551000
         TM    WRKOPTN1,WRK1APP    Appending to an existing file?       01552000
         BO    OUCEXIT0            --yes, RENAME not required.          01553000
         CLC   WRKOPFT,=CL8'CMSUT2'  Delayed RENAME?                    01554000
         BE    OUCDFIN                                                  01555000
*                                                                       01556000
*  Erase any file with target name.                                     01557000
         MVC   WRKERCMD,=CL8'ERASE'  Build plist for ERASE.             01558000
         MVC   WRKERID,WRKFINID    Final name for file.                 01559000
         MVC   WRKERXFF,=8X'FF'    Plist fence.                         01560000
         LA    R1,WRKERLST                                              01561000
         SVC   202                                                      01562000
         DC    AL4(*+4)                                                 01563000
*                                                                       01564000
*  Rename VMARC CMSUT1 fileid to real name.                             01565000
         MVC   WRKRPCMD,=CL8'RENAME' Build plist for RENAME.            01566000
         MVC   WRKRPID2,WRKERID      Target fileid.                     01567000
         MVC   WRKRPFN1,=CL8'VMARC'  Source fileid.                     01568000
         MVC   WRKRPFT1,=CL8'CMSUT1' ..                                 01569000
         MVC   WRKRPFM1,WRKRPFM2     ..                                 01570000
         MVC   WRKRPXFF,=8X'FF'      Plist fence.                       01571000
         LA    R1,WRKRPLST                                              01572000
         SVC   202                                                      01573000
         DC    AL4(OUCERREN)                                            01574000
*  Should we handle special VMARC CMSUT2 file now?                      01575000
OUCDFIN  DS    0H                                                       01576000
         TM    WRKFLAGB,WRKBENDI   Endfile reached on input?            01577000
         BZ    OUCEXIT0            --not yet.                           01578000
         TM    WRKFLAGA,WRKASAME   Pending VMARC CMSUT2 rename?         01579000
         BZ    OUCEXIT0            --no.                                01580000
         NI    WRKFLAGA,X'FF'-WRKASAME                                  01581000
*                                                                       01582000
*  Erase input file.                                                    01583000
         MVC   WRKERCMD,=CL8'ERASE'  Build ERASE plist.                 01584000
         MVC   WRKERID,WRKINID     Input fileid.                        01585000
         MVC   WRKERXFF,=8X'FF'    Plist fence.                         01586000
         LA    R1,WRKERLST                                              01587000
         SVC   202                                                      01588000
         DC    AL4(*+4)                                                 01589000
*                                                                       01590000
*  Rename VMARC CMSUT2 fileid to real name.                             01591000
         MVC   WRKRPCMD,=CL8'RENAME' Build plist for RENAME.            01592000
         MVC   WRKRPID2,WRKERID      Target fileid.                     01593000
         MVC   WRKRPFN1,=CL8'VMARC'  Source fileid.                     01594000
         MVC   WRKRPFT1,=CL8'CMSUT2' ..                                 01595000
         MVC   WRKRPFM1,WRKRPFM2     ..                                 01596000
         MVC   WRKRPXFF,=8X'FF'      Plist fence.                       01597000
         LA    R1,WRKRPLST                                              01598000
         SVC   202                                                      01599000
         DC    AL4(OUCERREN)                                            01600000
         B     OUCEXIT0                                                 01601000
*********************************************************************** 01602000
*              Close output device.                                   * 01603000
*********************************************************************** 01604000
OUCDEVIC DS    0H                                                       01605000
         TM    WRKOPTN2,WRK2TAPE   Tape output?                         01606000
         BO    OUCTAPE                                                  01607000
         TM    WRKOPTN2,WRK2PRT    Print output?                        01608000
         BO    OUCPRT                                                   01609000
*********************************************************************** 01610000
*              Close punch.                                           * 01611000
*********************************************************************** 01612000
OUCPUNCH DS    0H                                                       01613000
         LA    R1,OUCPUNCP         'CP CLOSE PUN'                       01614000
         SVC   202                                                      01615000
         DC    AL4(OUCERPUN)                                            01616000
         B     OUCEXIT0                                                 01617000
*********************************************************************** 01618000
*              Close printer.                                         * 01619000
*********************************************************************** 01620000
OUCPRT   DS    0H                                                       01621000
         LA    R1,OUCPRTCP         'CP CLOSE PRT'                       01622000
         SVC   202                                                      01623000
         DC    AL4(OUCERPRT)                                            01624000
         B     OUCEXIT0                                                 01625000
*********************************************************************** 01626000
*              Close tape.                                            * 01627000
*********************************************************************** 01628000
OUCTAPE  DS    0H                                                       01629000
         MVC   WRKOPTRD,=CL8'WTM'                                       01630000
         LA    R1,WRKOPLST                                              01631000
         SVC   202                 Write tape mark.                     01632000
         DC    AL4(OUCERWTM)                                            01633000
         MVC   WRKOPTRD,=CL8'BSR'                                       01634000
         LA    R1,WRKOPLST                                              01635000
         SVC   202                 Backup over tape mark.               01636000
         DC    AL4(*+4)                                                 01637000
         B     OUCEXIT                                                  01638000
*********************************************************************** 01639000
*              Handle error conditions.                               * 01640000
*********************************************************************** 01641000
OUCERFST DS    0H                                                       01642000
         LR    R3,R15                                                   01643000
         DMSKEY RESET              * * * * * * * * * * * * * * * * * *  01644000
         LINEDIT TEXT='Unexpected error from GETFST.  RC=..',          X01645000
               SUB=(DEC,(R3))                                           01646000
         B     OUCERROR                                                 01647000
OUCERWTM DS    0H                                                       01648000
         LR    R3,R15                                                   01649000
         LINEDIT TEXT='Unexpected error writing tape mark.  RC=..',    X01650000
               SUB=(DEC,(R3))                                           01651000
         B     OUCERROR                                                 01652000
OUCERREN DS    0H                                                       01653000
         LR    R3,R15                                                   01654000
         LINEDIT TEXT='Unexpected error from RENAME.  RC=..',          X01655000
               SUB=(DEC,(R3))                                           01656000
         B     OUCERROR                                                 01657000
OUCWERR  DS    0H                                                       01658000
         LR    R3,R15                                                   01659000
         LINEDIT TEXT='Unexpected error writing tape mark.  RC=..',    X01660000
               SUB=(DEC,(R3))                                           01661000
         B     OUCERROR                                                 01662000
OUCDERR  DS    0H                                                       01663000
         LR    R3,R15                                                   01664000
         LINEDIT TEXT='Unexpected error closing output file.  RC=..',  X01665000
               SUB=(DEC,(R3))                                           01666000
         B     OUCERROR                                                 01667000
OUCERPUN DS    0H                                                       01668000
         LR    R3,R15                                                   01669000
         LINEDIT TEXT='Unexpected error closing punch.  RC=..',        X01670000
               SUB=(DEC,(R3))                                           01671000
         B     OUCERROR                                                 01672000
OUCERPRT DS    0H                                                       01673000
         LR    R3,R15                                                   01674000
         LINEDIT TEXT='Unexpected error closing printer.  RC=..',      X01675000
               SUB=(DEC,(R3))                                           01676000
         B     OUCERROR                                                 01677000
OUCRERR  DS    0H                                                       01678000
         LR    R3,R15                                                   01679000
         LINEDIT TEXT='Unexpected error closing printer.  RC=..',      X01680000
               SUB=(DEC,(R3))                                           01681000
         B     OUCERROR                                                 01682000
*********************************************************************** 01683000
*              Return to caller.                                      * 01684000
*********************************************************************** 01685000
OUCERROR DS    0H                                                       01686000
         OI    WRKFLAGB,WRKBERR                                         01687000
         LA    R15,8                                                    01688000
         B     OUCEXIT                                                  01689000
OUCEXIT0 DS    0H                                                       01690000
         SR    R15,R15             Set normal return code.              01691000
OUCEXIT  DS    0H                                                       01692000
         IEXIT ,                   ..and return.                        01693000
         SPACE ,                                                        01694000
OUCPUNCP DC    0D'0',C'CP      CLOSE   PUNCH   ',8X'FF'                 01695000
OUCPRTCP DC    0D'0',C'CP      CLOSE   PRINTER ',8X'FF'                 01696000
         TITLE '--  STORE  Store-Asis (non-compaction) routines'        01697000
*********************************************************************** 01698000
VMASIS   CSECT                                                        * 01699000
*                       As-is compaction routines.                    * 01700000
*                                                                     * 01701000
*********************************************************************** 01702000
         IENTER ,                                                       01703000
*                                                                       01704000
         TM    WRKOPTN1,WRK1PACK   Compack, uncompact or list?          01705000
         BO    PACKSTOR            --Compaction.                        01706000
         TM    WRKOPTN2,WRK2LIST   Uncompact or list?                   01707000
         BO    SKIPSTOR            --list.                              01708000
         TM    WRKFLAGB,WRKBSKIP   Skip this member?                    01709000
         BZ    UNPKSTOR            --normal uncompaction.               01710000
*********************************************************************** 01711000
SKIPSTOR DS    0H  *                                                  * 01712000
********************    Skip as-is archive member.                    * 01713000
*                                                                     * 01714000
*********************************************************************** 01715000
SKSTLOOP DS    0H                                                       01716000
         BAL   RLINK,GETBYTE       Accumulate LRECL.                    01717000
         S     R1,=A(KODEBCD)      ..                                   01718000
         LR    R6,R1               ..                                   01719000
         BAL   RLINK,GETBYTE       ..                                   01720000
         S     R1,=A(KODEBCD)      ..                                   01721000
         SLL   R6,8                ..                                   01722000
         AR    R6,R1               ..                                   01723000
         BZ    STOREXIT                                                 01724000
         A     R6,WRKNDXIN         Buffer position after data skip.     01725000
SKSTRECL DS    0H                                                       01726000
         S     R6,WRKIBLEN         Are we past end of buffer?           01727000
         BNP   SKSTSET                                                  01728000
         BAL   RLINK,GETRECRD      Get another record.                  01729000
         BZ    SKSTRECL            ..and see if within this buffer.     01730000
         B     STOREXIT                                                 01731000
SKSTSET  DS    0H                                                       01732000
         A     R6,WRKIBLEN         Compute current buffer position.     01733000
         ST    R6,WRKNDXIN         New buffer position.                 01734000
         B     SKSTLOOP            Go process next record.              01735000
*********************************************************************** 01736000
UNPKSTOR DS    0H  *                                                  * 01737000
********************    Unstore as-is.                                * 01738000
*                                                                     * 01739000
*********************************************************************** 01740000
UNSTLOOP DS    0H                                                       01741000
         BAL   RLINK,GETBYTE       Accumulate LRECL.                    01742000
         S     R1,=A(KODEBCD)      ..                                   01743000
         LR    R6,R1               ..                                   01744000
         BAL   RLINK,GETBYTE       ..                                   01745000
         S     R1,=A(KODEBCD)      ..                                   01746000
         SLL   R6,8                ..                                   01747000
         AR    R6,R1               ..                                   01748000
         BZ    UNSTEOF                                                  01749000
UNSTRECL DS    0H                                                       01750000
         BAL   RLINK,GETBYTE       Get byte of record.                  01751000
         BAL   RLINK,PUTBYTE       Add to output stream.                01752000
         BCT   R6,UNSTRECL         ..process entire record.             01753000
         TM    WRKFLAGA,WRKAFIXO   If variable length..                 01754000
         BO    UNSTLOOP            (..it's not.)                        01755000
         LA    R1,KODENDR          ..we must indicate..                 01756000
         BAL   RLINK,PUTBYTE       ..end of record.                     01757000
         B     UNSTLOOP            Go process next record.              01758000
UNSTEOF  DS    0H                                                       01759000
         BAL   RLINK,PUTFLUSH      Force out final buffer.              01760000
         B     STOREXIT                                                 01761000
*********************************************************************** 01762000
PACKSTOR DS    0H *                                                   * 01763000
*******************     Store as-is.                                  * 01764000
*                                                                     * 01765000
*********************************************************************** 01766000
PKSTLOOP DS    0H                                                       01767000
         ICM   R5,B'1100',WRKIBLEN+2  Number of bytes in record.        01768000
         LA    R6,2                LRECL is two bytes.                  01769000
PKSTRECL DS    0H                                                       01770000
         SR    R4,R4               Clear for shift.                     01771000
         SLDL  R4,8                Next byte of LRECL.                  01772000
         LA    R1,KODEBCD(,R4)     Bias for PUTBYTE.                    01773000
         BAL   RLINK,PUTBYTE       Add to output.                       01774000
         BCT   R6,PKSTRECL                                              01775000
         L     R6,WRKIBLEN         Number of bytes in record.           01776000
         L     R5,WRKIPLST+FSCBBUFF-FSCBD  Start of record.             01777000
PKSTPUT  DS    0H                                                       01778000
         SR    R1,R1                                                    01779000
         IC    R1,0(,R5)           Get input byte.                      01780000
         LA    R1,KODEBCD(,R1)     Bias for PUTBYTE.                    01781000
         BAL   RLINK,PUTBYTE       Add byte to output stream.           01782000
         LA    R5,1(,R5)           Advance buffer pointer.              01783000
         BCT   R6,PKSTPUT          ..go process next byte.              01784000
         BAL   RLINK,GETRECRD      Get next input record.               01785000
         BZ    PKSTLOOP            Go process next record.              01786000
PKSTEOF  DS    0H                                                       01787000
         LA    R1,0+KODEBCD        Finish off with LRECL=0.             01788000
         BAL   RLINK,PUTBYTE       ..                                   01789000
         LA    R1,0+KODEBCD        ..                                   01790000
         BAL   RLINK,PUTBYTE       ..                                   01791000
         LA    R1,0+KODEBCD        ..                                   01792000
         BAL   RLINK,PUTBYTE       ..                                   01793000
         BAL   RLINK,PUTFLUSH      Force out final buffer.              01794000
STOREXIT DS    0H                                                       01795000
         SR    R15,R15                                                  01796000
         IEXIT ,                   Return to caller.                    01797000
         TITLE '--  VMS2   compaction sections'                         01798000
*********************************************************************** 01799000
VMS2     CSECT  *                                                     * 01800000
*****************       S2 compaction routines.                       * 01801000
*                                                                     * 01802000
*********************************************************************** 01803000
         IENTER ,                                                       01804000
*                                                                       01805000
         TM    WRKOPTN1,WRK1PACK   Compack, uncompact or list?          01806000
         BNZ   PACKS2              --Compaction.                        01807000
         TM    WRKOPTN2,WRK2LIST   Uncompact or list?                   01808000
         BO    SKIPS2              --List.                              01809000
         TM    WRKFLAGB,WRKBSKIP   Skipping this member?                01810000
         BZ    UNPKS2              --Uncompaction.                      01811000
         B     SKIPS2              --Skip.                              01812000
         SPACE ,                                                        01813000
S2EXIT   DS    0H                                                       01814000
         SR    R15,R15                                                  01815000
         IEXIT ,                   Return to caller.                    01816000
*********************************************************************** 01817000
SKIPS2   DS    0H  *                                                  * 01818000
********************    S2 skip member section.                       * 01819000
*                                                                     * 01820000
*********************************************************************** 01821000
         L     R7,WRKIBLEN         Length of first input record.        01822000
         S     R7,WRKNDXIN         Length remaining after header.       01823000
*                                                                       01824000
*  Registers 4 through 6 will hold the bit masks to test for            01825000
*  the presence of an end-file code at the end of an input              01826000
*  record.  Since the compaction codes are 12-bit entities,             01827000
*  there are three possible code versus byte alignments to be           01828000
*  considered.                                                          01829000
*     For fixed length files, a single endfile code marks endfile.      01830000
*  For variable length files, two in succession must be observed.       01831000
*                                                                       01832000
         LM    R4,R6,=A(X'00000FFF',X'000FFFFF',X'0000FFFF')            01833000
         TM    WRKFLAGA,WRKAFIXO   Test assumption recfm = fixed.       01834000
         BO    *+L'*+4                                                  01835000
         LM    R4,R6,=A(X'00FFFFFF',X'FFFFFFFF',X'0FFFFFFF')            01836000
*                                                                       01837000
*  First record may not be big enough for endfile code(s).              01838000
         CH    R7,=H'4'            Long enough for endfile test?        01839000
         BNL   SKS2TEST            --yes.                               01840000
         TM    WRKFLAGA,WRKAFIXO   If output recfm = fixed..            01841000
         BZ    SKS2LOOP                                                 01842000
         CH    R7,=H'2'            ..first record can be shorter.       01843000
         BNL   SKS2TEST            --It's big enough.                   01844000
*********************************************************************** 01845000
*  Get another input record.                                          * 01846000
*********************************************************************** 01847000
SKS2LOOP DS    0H                                                       01848000
         BAL   RLINK,GETRECRD      Get another input record.            01849000
         BNZ   S2EXIT                                                   01850000
         A     R7,WRKIBLEN         Accumulate total byte count.         01851000
*********************************************************************** 01852000
*  Examine last code/last two codes in record for endfile.            * 01853000
*********************************************************************** 01854000
SKS2TEST DS    0H                                                       01855000
*                                                                       01856000
*  Get last four bytes from record.                                     01857000
         L     R2,WRKIBUFF         Address of input buffer.             01858000
         A     R2,WRKIBLEN                                              01859000
         SH    R2,=H'4'            Address of last 4 bytes.             01860000
         L     R1,0(,R2)           (probably not aligned.)              01861000
*                                                                       01862000
*  Test appropriate bits for endfile indication.                        01863000
         N     R7,=F'3'            Low-order 2 bits determine mask.     01864000
         EX    R7,SKS2INST         Test for final end-file code(s).     01865000
         BNZ   SKS2LOOP            --More to do.                        01866000
         B     S2EXIT              --All done.                          01867000
*                                                                       01868000
SKS2INST NR    R1,R4+*-*           ** Executed **                       01869000
*********************************************************************** 01870000
UNPKS2   DS    0H  *                                                  * 01871000
********************    S2 uncompaction section.                      * 01872000
*                                                                     * 01873000
*********************************************************************** 01874000
         BAL   RLINK,S2INIT        Initialize string table.             01875000
*                                                                       01876000
*  Register usage:                                                      01877000
*        R5 =  Last code generated.                                     01878000
*        R4 =  Second to last code generated.                           01879000
*        R8 => Previous node.                                           01880000
*        R7 => Current node.                                            01881000
*        R6 => Next node.                                               01882000
*                                                                       01883000
         BAL   RLINK,GETCODE       Read first input code.               01884000
         LR    R4,R1               Remember the first code.             01885000
         BAL   RLINK,PUTBYTE       Add first character to output.       01886000
         BZ    UNPKS2N             Jump into main decompaction loop.    01887000
         B     S2EXIT                                                   01888000
*                                                                       01889000
UNPKS2LP DS    0H                                                       01890000
         BAL   RLINK,S2ADDNEW      Extend string table with new entry.  01891000
         LR    R4,R5               Last code becomes next to last.      01892000
UNPKS2N  BAL   RLINK,GETCODE       Get next input code.                 01893000
         LR    R5,R1               Remember the last code.              01894000
         SLL   R1,5                Compute index into string table.     01895000
         LR    R7,R1                                                    01896000
         A     R7,WRKTABPT         Address of string table entry.       01897000
         USING STRDSECT,R7                                              01898000
*                                                                       01899000
         SR    R8,R8               Initialize previous node pointer.    01900000
*                                                                       01901000
*  Drop down as far as possible along the leftmost path.                01902000
U2LEFT   DS    0H                                                       01903000
         L     R6,STRLEFT          Find left substring.                 01904000
         ST    R8,STRLEFT          Remember path back up the tree.      01905000
         LR    R8,R7               Advance pointers downward.           01906000
         LTR   R7,R6               ..                                   01907000
         BP    U2LEFT                                                   01908000
*                                                                       01909000
*  We have hit the bottom.                                              01910000
         LR    R7,R8               Restore pointer to bottom node.      01911000
         L     R8,STRLEFT          Restore substring pointers.          01912000
         ST    R6,STRLEFT          ..                                   01913000
         LH    R1,STRCHAR          Character represented here.          01914000
         BAL   RLINK,PUTBYTE       Add character to output buffer.      01915000
         BNZ   S2EXIT                                                   01916000
*                                                                       01917000
*  Retrace path up looking for the first unexplored right path.         01918000
U2UNWIND DS    0H                                                       01919000
         LR    R6,R7               Advance pointers up the tree.        01920000
         LTR   R7,R8               ..                                   01921000
         BNP   UNPKS2LP                                                 01922000
         TM    STRRIGHT,X'80'      Has right side been explored?        01923000
         BZ    U2UNWDLT            --no, go do so now.                  01924000
         NI    STRRIGHT,X'7F'      Clear right-side marker.             01925000
         L     R8,STRRIGHT         Restore substring pointers.          01926000
         ST    R6,STRRIGHT         ..                                   01927000
         B     U2UNWIND            Continue upward ascent.              01928000
U2UNWDLT DS    0H                                                       01929000
         L     R8,STRLEFT          Restore left-side pointers.          01930000
         ST    R6,STRLEFT          ..                                   01931000
         L     R6,STRRIGHT         Reverse right-side pointers.         01932000
         ST    R8,STRRIGHT         ..                                   01933000
         OI    STRRIGHT,X'80'      Mark it as right-side.               01934000
         LR    R8,R7               Advance down the right-side.         01935000
         LR    R7,R6               ..                                   01936000
         B     U2LEFT              Now, go down the left-side.          01937000
         DROP  R7                                                       01938000
         EJECT                                                          01939000
*********************************************************************** 01940000
PACKS2   DS    0H  *                                                  * 01941000
********************    S2 compaction section.                        * 01942000
*                                                                     * 01943000
*********************************************************************** 01944000
         BAL   RLINK,S2INIT        Initialize string table.             01945000
*                                                                       01946000
*  Register usage:                                                      01947000
*        R7 =  Left ring buffer index.                                  01948000
*        R8 =  Right ring buffer index.                                 01949000
*        R6 =  Temporary left ring buffer index.                        01950000
*        R5 =  Last code generated.                                     01951000
*        R4 =  Second to last code generated.                           01952000
*        R3 => Previous node.                                           01953000
*        R2 => Currnet node.                                            01954000
*        R1 => Next node.                                               01955000
*                                                                       01956000
         SR    R7,R7               Initialize code queue head.          01957000
         SR    R8,R8               Initialize code queue tail.          01958000
         BAL   RLINK,GETBYTE       Get first input character.           01959000
         BNZ   PACKS2ND            Exit on endfile.                     01960000
         LR    R4,R1               Which is also the first code.        01961000
         BAL   RLINK,PUTCODE       Add code to output buffer.           01962000
         B     PACKS2N             Enter main compaction loop.          01963000
PACKS2ND DS    0H                                                       01964000
         LA    R1,KODENDR          Indicate end of file.                01965000
         BAL   RLINK,PUTCODE       Output the final code.               01966000
         BAL   RLINK,PUTFLUSH      Force out final buffer.              01967000
         B     S2EXIT                                                   01968000
PACKS2LP DS    0H                                                       01969000
         BAL   RLINK,S2ADDNEW      Extend string table with new code.   01970000
         LR    R4,R5               Last code becomes next to last.      01971000
PACKS2N  BAL   RLINK,S2REFILL      Replinish character queue.           01972000
         BZ    PACKS2ND            Exit on endfile.                     01973000
         LH    R1,WRK2KBUF(R7)     Left-most character.                 01974000
         SLL   R1,5                Index into string table.             01975000
         A     R1,WRKTABPT         Address of atomic string entry.      01976000
         LR    R15,R1              Atomic guaranteed to match.          01977000
         SR    R14,R14             Matching length - 1.                 01978000
*********************************************************************** 01979000
*  Search offsprings and siblings for the longest matching string.    * 01980000
*********************************************************************** 01981000
P2LOFFSP DS    0H                                                       01982000
         L     R2,STROFFSP-STRDSECT(,R1)  Explore offspring strings.    01983000
         LTR   R2,R2                                                    01984000
         BP    P2EXPLOR                                                 01985000
*                                                                       01986000
*  Since the current string did match, and since the sibling chain is   01987000
*  ordered by age (oldest first), no sibling of this node can match     01988000
*  more of the input than the current string.                           01989000
*                                                                       01990000
         B     P2TIRED                                                  01991000
         SPACE ,                                                        01992000
*                                                                       01993000
*  Come here if the current string failed to match.                     01994000
*                                                                       01995000
P2LSIBLG DS    0H                                                       01996000
         L     R2,STRSIBLG-STRDSECT(,R1)  Try sibling.                  01997000
         LTR   R2,R2                                                    01998000
         BP    P2EXPLOR                                                 01999000
*********************************************************************** 02000000
*  All possibilities have been tried.                                 * 02001000
*********************************************************************** 02002000
P2TIRED  DS    0H                                                       02003000
         LA    R7,2(R14,R7)        Advance buffer pointer.              02004000
         N     R7,=A(4096-2)       (buffer is circular.)                02005000
         SR    R14,R14                                                  02006000
         S     R15,WRKTABPT                                             02007000
         D     R14,=A(STRDLEN)     Compute string's code value.         02008000
         LR    R1,R15                                                   02009000
         LR    R5,R1               Remember the resulting code.         02010000
         BAL   RLINK,PUTCODE       Add code to output buffer.           02011000
         B     PACKS2LP                                                 02012000
*********************************************************************** 02013000
*  Explore the current candidate string to see if it matches.         * 02014000
*********************************************************************** 02015000
P2EXPLOR DS    0H                                                       02016000
         USING STRDSECT,R2                                              02017000
         L     R1,STRLEFT          Left substring.                      02018000
         LH    R6,STRLEN-STRDSECT(,R1)  Length-1 of left substring.     02019000
         LA    R6,2(R6,R7)         Advance index into buffer.           02020000
         N     R6,=A(4096-2)       (buffer is circular.)                02021000
         SR    R3,R3               Initialize previous node pointer.    02022000
*                                                                       02023000
*  Move once to the right.                                              02024000
P2LRIGHT DS    0H                                                       02025000
         L     R1,STRRIGHT         Reverse right-side links.            02026000
         ST    R3,STRRIGHT         ..                                   02027000
         OI    STRRIGHT,X'80'      Mark it as a right-side traversal.   02028000
         LR    R3,R2               Advance pointers down tree.          02029000
         LR    R2,R1               ..                                   02030000
*                                                                       02031000
*  Move as far as possible on the left.                                 02032000
P2LLEFT  DS    0H                                                       02033000
         L     R1,STRLEFT          Reverse left-side links.             02034000
         ST    R3,STRLEFT          ..                                   02035000
         LR    R3,R2               Advance pointers down tree.          02036000
         LTR   R2,R1               ..                                   02037000
         BP    P2LLEFT             Continue until bottom found.         02038000
*                                                                       02039000
*  We have struck the bottom on the left.                               02040000
         LR    R2,R3               Recover pointer to bottom node.      02041000
         L     R3,STRLEFT          Restore original links.              02042000
         ST    R1,STRLEFT          ..                                   02043000
         LH    R0,STRCHAR                                               02044000
         CH    R0,WRK2KBUF(R6)     Does character match input?          02045000
         BNE   P2LFAIL             --no, go bail-out of entire string.  02046000
         LA    R6,2(,R6)           Advance buffer index.                02047000
         N     R6,=A(4096-2)       (buffer is circular.)                02048000
*                                                                       02049000
*  Trace path back up looking for first unexplored right-side           02050000
P2LUNWND DS    0H                                                       02051000
         LR    R1,R2               Advance node pointers.               02052000
         LTR   R2,R3               ..                                   02053000
         BNP   P2LOKAY                                                  02054000
         TM    STRRIGHT,X'80'      Already explored on the right?       02055000
         BZ    P2LUNWLT            --no, go do so now.                  02056000
         NI    STRRIGHT,X'7F'      Clear right-side marker.             02057000
         L     R3,STRRIGHT         Restore original links.              02058000
         ST    R1,STRRIGHT         ..                                   02059000
         B     P2LUNWND            Continue up the tree.                02060000
P2LUNWLT DS    0H                                                       02061000
         L     R3,STRLEFT          Restore left-side links.             02062000
         ST    R1,STRLEFT          ..                                   02063000
         B     P2LRIGHT            Go explore right-side.               02064000
*                                                                       02065000
*  Candidate string has matched.                                        02066000
P2LOKAY  DS    0H                                                       02067000
         LR    R15,R1              remember pointer to this string.     02068000
         LH    R14,STRLEN-STRDSECT(,R1)  ..and its length               02069000
         B     P2LOFFSP            Go explore offsprings.               02070000
*                                                                       02071000
*  Candidate string has failed to match.                                02072000
P2LFAIL  DS    0H                                                       02073000
         LR    R1,R2               Climb back up.                       02074000
         LTR   R2,R3               ..                                   02075000
         BNP   P2LSIBLG            If done, go explore siblings.        02076000
         TM    STRRIGHT,X'80'      Return on the right-side?            02077000
         BZ    P2LFAILL            --no, go climb up on the left.       02078000
         NI    STRRIGHT,X'7F'      Clear right-side marker.             02079000
         L     R3,STRRIGHT         Restore original links.              02080000
         ST    R1,STRRIGHT         ..                                   02081000
         B     P2LFAIL             Continue climb up.                   02082000
P2LFAILL DS    0H                                                       02083000
         L     R3,STRLEFT          Restore original links.              02084000
         ST    R1,STRLEFT          ..                                   02085000
         B     P2LFAIL             Continue climb up.                   02086000
         DROP  R2                                                       02087000
*********************************************************************** 02088000
*                       S2 add-string routine.                        * 02089000
*********************************************************************** 02090000
S2ADDNEW DS    0H                                                       02091000
*                                                                       02092000
*  Find string table entries for the left and right substrings.         02093000
         LR    R14,R4              Left substring code value.           02094000
         SLL   R14,5               Displacement to string table entry.  02095000
         A     R14,WRKTABPT        Add base to get absolute address.    02096000
         LR    R15,R5              Right substring code value.          02097000
         SLL   R15,5               Displacement to string table entry.  02098000
         A     R15,WRKTABPT        Address of right substring.          02099000
*                                                                       02100000
         LH    R1,STRLEN-STRDSECT(,R14)  Length of left substring - 1.  02101000
         AH    R1,STRLEN-STRDSECT(,R15)  Length of right substrint - 1. 02102000
         C     R1,=A(4096-2)       Would string be longer with buffer?  02103000
         BHR   RLINK               --Yes, skip adding it.               02104000
*                                                                       02105000
         LH    R1,STRCOUNT-STRDSECT(,R14)  Update reference counter     02106000
         LA    R1,1(,R1)                   ..for left substring.        02107000
         STH   R1,STRCOUNT-STRDSECT(,R14)  ..                           02108000
         LH    R1,STRCOUNT-STRDSECT(,R15)  Update reference counter     02109000
         LA    R1,1(,R1)                   ..for right substring.       02110000
         STH   R1,STRCOUNT-STRDSECT(,R15)  ..                           02111000
*                                                                       02112000
*  Find a place for the new string.                                     02113000
         L     R2,WRKTABLE         Address of last entry in table.      02114000
         USING STRDSECT,R2                                              02115000
S2ADLOOK DS    0H                                                       02116000
         LA    R2,STRDLEN(,R2)     Try next entry.                      02117000
         C     R2,WRKTABLM         Past end of the table?               02118000
         BL    *+L'*+4             --no, skip.                          02119000
         L     R2,WRKTABST         Wrap to beginning of table.          02120000
         OC    STRCOUNT,STRCOUNT   Is this entry unreferenced?          02121000
         BNZ   S2ADLOOK            --no, go try another.                02122000
*                                                                       02123000
*  Replace an old string entry with this new one.                       02124000
         L     R1,STRLEFT          Old string's left substring.         02125000
         LTR   R1,R1                                                    02126000
         BNP   S2AMAKE                                                  02127000
         LH    R0,STRCOUNT-STRDSECT(,R1)  Update reference counter.     02128000
         BCTR  R0,0                       ..                            02129000
         STH   R0,STRCOUNT-STRDSECT(,R1)  ..                            02130000
         LA    R1,STROFFSP-STRSIBLG(,R1)                                02131000
S2AREPLP DS    0H                                                       02132000
         L     R0,STRSIBLG-STRDSECT(,R1)  Follow sibling chain.         02133000
         CR    R0,R2               Look for node being replaced.        02134000
         BE    S2AREPL             --Found it.                          02135000
         LR    R1,R0               Advance along sibling chain.         02136000
         B     S2AREPLP                                                 02137000
S2AREPL  DS    0H                                                       02138000
         MVC   STRSIBLG-STRDSECT(L'STRSIBLG,R1),STRSIBLG  Unlink node.  02139000
*                                                                       02140000
         L     R1,STRRIGHT         Old string's right substring.        02141000
         LH    R0,STRCOUNT-STRDSECT(,R1)  Update reference counter.     02142000
         BCTR  R0,0                       ..                            02143000
         STH   R0,STRCOUNT-STRDSECT(,R1)  ..                            02144000
*                                                                       02145000
*  Now construct a new entry for this string.                           02146000
S2AMAKE  DS    0H                                                       02147000
         C     R15,WRKTABLE        Test for <A,AA> special case.        02148000
         BNE   S2AXXXXX                                                 02149000
         C     R14,STRLEFT-STRDSECT(,R15) ..                            02150000
         BNE   S2AXXXXX                                                 02151000
         LR    R0,R15              Rotate string definition             02152000
         LR    R15,R14             ..from <A,AA>                        02153000
         LR    R15,R0              ..into <AA,A>.                       02154000
S2AXXXXX DS    0H                                                       02155000
         ST    R14,STRLEFT         Left substring.                      02156000
         ST    R15,STRRIGHT        Right substring.                     02157000
         LA    R0,2                Bias length computation.             02158000
         AH    R0,STRLEN-STRDSECT(,R14)                                 02159000
         AH    R0,STRLEN-STRDSECT(,R15)                                 02160000
         STH   R0,STRLEN           Store length of new string.          02161000
*                                                                       02162000
*  Insert new node into offspring/sibling list of left substring.       02163000
         LA    R14,STROFFSP-STRSIBLG(,R14)  Header for sibling chain.   02164000
S2ALOOP  DS    0H                                                       02165000
         LR    R1,R14              Remember where we where.             02166000
         L     R14,STRSIBLG-STRDSECT(,R1)  Advance across the chain.    02167000
         C     R14,WRKTABLE        Sibling of most recent entry?        02168000
         BE    S2ASTORE            --Yes, this one slips ahead.         02169000
         LTR   R14,R14             End of chain?                        02170000
         BNZ   S2ALOOP             ..no, keep on searching.             02171000
S2ASTORE DS    0H                                                       02172000
         ST    R14,STRSIBLG        New node's sibling.                  02173000
         ST    R2,STRSIBLG-STRDSECT(,R1)  Old gets a new brother.       02174000
         ST    R2,WRKTABLE         Remember last entry made.            02175000
         BR    RLINK                                                    02176000
         DROP  R2                                                       02177000
*********************************************************************** 02178000
*                       S2 string table initialization routine.       * 02179000
*********************************************************************** 02180000
S2INIT   DS    0H                                                       02181000
         LA    R0,WRK2KBUF                                              02182000
         L     R1,=A(WRKS2SIZ)                                          02183000
         SR    R15,R15                                                  02184000
         MVCL  R0,R14              Zero input buffer and string table.  02185000
*                                                                       02186000
         L     R2,=A(WRKSTRTB-WRKDSECT)                                 02187000
         AR    R2,R13                                                   02188000
         ST    R2,WRKTABPT         Origin of string table.              02189000
         A     R2,=A(STRDLEN*(KODMAX+1))                                02190000
         ST    R2,WRKTABST         Reassignable part of string table.   02191000
         A     R2,=A(STRDLEN*(4096-KODMAX-1))                           02192000
         ST    R2,WRKTABLM         End of string table.                 02193000
         ST    R2,WRKTABLE         Dummy last-entry-made pointer.       02194000
*                                                                       02195000
*  Add atomic characters to the string table.                           02196000
         L     R2,WRKTABPT                                              02197000
         LA    R0,KODMAX+1                                              02198000
         SR    R1,R1                                                    02199000
         USING STRDSECT,R2                                              02200000
S2INITLP DS    0H                                                       02201000
         STH   R1,STRCHAR          Set atomic value.                    02202000
         MVC   STRCOUNT,=H'1'      Preset reference counter.            02203000
         LA    R1,1(,R1)           Next value.                          02204000
         LA    R2,STRDLEN(,R2)     Next entry location.                 02205000
         BCT   R0,S2INITLP                                              02206000
         BR    RLINK                                                    02207000
         DROP  R2                                                       02208000
*********************************************************************** 02209000
*                       S2 buffer management routine.                 * 02210000
*********************************************************************** 02211000
S2REFILL DS    0H                                                       02212000
         TM    WRKFLAGB,WRKBENDI   Was endfile previously signaled?     02213000
         BNZ   RFENDF                                                   02214000
         ST    RLINK,12(,13)       Protect return register.             02215000
RFREAD   DS    0H                                                       02216000
         BAL   RLINK,GETBYTE       Get next input character.            02217000
         STH   R1,WRK2KBUF(R8)     Add to tail of buffer.               02218000
         BNZ   RFEXIT              Stop filling on endfile.             02219000
         LA    R8,2(,R8)           Advance tail pointer.                02220000
         N     R8,=A(4096-2)       (wrap to front, as necessary).       02221000
         CR    R8,R7                                                    02222000
         BNE   RFREAD              Continue until buffer is full.       02223000
RFEXIT   DS    0H                                                       02224000
         L     RLINK,12(,13)       Recover return register.             02225000
         LTR   RLINK,RLINK         Set non-endfile return code.         02226000
         BR    RLINK                                                    02227000
RFENDF   DS    0H                                                       02228000
         CR    R8,R7               If head and tail have converged..    02229000
         BR    RLINK               ..then signal caller.                02230000
         TITLE '--  VMLZW  LZW Compaction routines'                     02231000
*********************************************************************** 02232000
VMLZW    CSECT  *                                                     * 02233000
*****************       LZW compaction routines.                      * 02234000
*                                                                     * 02235000
*********************************************************************** 02236000
         IENTER ,                                                       02237000
*                                                                       02238000
         TM    WRKOPTN1,WRK1PACK   Compack, uncompact or list?          02239000
         BO    PACKLZW             --Compaction.                        02240000
         TM    WRKOPTN2,WRK2LIST   Uncompact or list?                   02241000
         BO    SKIPLZW             --List.                              02242000
         TM    WRKFLAGB,WRKBSKIP   Skip or uncompact?                   02243000
         BZ    UNPKLZW             --Uncompaction.                      02244000
         B     SKIPLZW             --Skip.                              02245000
         SPACE ,                                                        02246000
LZWEXIT  DS    0H                                                       02247000
         SR    R15,R15                                                  02248000
         IEXIT ,                   Return to caller.                    02249000
*********************************************************************** 02250000
SKIPLZW  DS    0H  *                                                  * 02251000
********************    LZW skip member section.                      * 02252000
*                                                                     * 02253000
*********************************************************************** 02254000
         L     R7,WRKIBLEN         Length of first input record.        02255000
         S     R7,WRKNDXIN         Length remaining after header.       02256000
*                                                                       02257000
*  Registers 4 through 6 will hold the bit masks to test for            02258000
*  the presence of an end-file code at the end of an input              02259000
*  record.  Since the compaction codes are 12-bit entities,             02260000
*  there are three possible code versus byte alignments to be           02261000
*  considered.                                                          02262000
*     For fixed length files, a single endfile code marks endfile.      02263000
*  For variable length files, two in succession must be observed.       02264000
*                                                                       02265000
         LM    R4,R6,=A(X'00000FFF',X'000FFFFF',X'0000FFFF')            02266000
         TM    WRKFLAGA,WRKAFIXO   Test assumption recfm = fixed.       02267000
         BO    *+L'*+4                                                  02268000
         LM    R4,R6,=A(X'00FFFFFF',X'FFFFFFFF',X'0FFFFFFF')            02269000
*                                                                       02270000
*  First record may not be big enough for endfile code(s).              02271000
         CH    R7,=H'4'            Long enough for endfile test?        02272000
         BNL   SKLZTEST            --yes.                               02273000
         TM    WRKFLAGA,WRKAFIXO   If output recfm = fixed..            02274000
         BZ    SKLZLOOP                                                 02275000
         CH    R7,=H'2'            ..first record can be shorter.       02276000
         BNL   SKLZTEST            --It's big enough.                   02277000
*********************************************************************** 02278000
*  Get another input record.                                          * 02279000
*********************************************************************** 02280000
SKLZLOOP DS    0H                                                       02281000
         BAL   RLINK,GETRECRD      Get another input record.            02282000
         BNZ   LZWEXIT                                                  02283000
         A     R7,WRKIBLEN         Accumulate total byte count.         02284000
*********************************************************************** 02285000
*  Examine last code/last two codes in record for endfile.            * 02286000
*********************************************************************** 02287000
SKLZTEST DS    0H                                                       02288000
*                                                                       02289000
*  Get last four bytes from record.                                     02290000
         L     R2,WRKIBUFF         Address of input buffer.             02291000
         A     R2,WRKIBLEN                                              02292000
         SH    R2,=H'4'            Address of last 4 bytes.             02293000
         L     R1,0(,R2)           (probably not aligned.)              02294000
*                                                                       02295000
*  Test appropriate bits for endfile indication.                        02296000
         N     R7,=F'3'            Low-order 2 bits determine mask.     02297000
         EX    R7,SKLZINST         Test for final end-file code(s).     02298000
         BNZ   SKLZLOOP            --More to do.                        02299000
         B     LZWEXIT             --All done.                          02300000
*                                                                       02301000
SKLZINST NR    R1,R4+*-*           ** Executed **                       02302000
*********************************************************************** 02303000
PACKLZW  DS    0H *                                                   * 02304000
*******************     LZW Compression.                              * 02305000
*                                                                     * 02306000
*********************************************************************** 02307000
         BAL   RLINK,LZWINIT       Initialize string table.             02308000
*********************************************************************** 02309000
*                                                                     * 02310000
*              Main LZW compaction loop.                              * 02311000
*                                                                     * 02312000
*********************************************************************** 02313000
*  R4 = Table entry for last predecessor.                               02314000
*  R5 = Next input character.                                           02315000
         BAL   RLINK,GETBYTE       Get very first character.            02316000
         BNZ   CRNHDONE                                                 02317000
         L     R4,=F'-1'           Indicate nil prefix.                 02318000
         LR    R5,R1                                                    02319000
CRNHLOOP DS    0H                                                       02320000
         BAL   RLINK,LOOKUP        Is <predecessor,character> in table? 02321000
         BNZ   CRNHPUT             --no.                                02322000
         LR    R4,R1               Set new predecessor.                 02323000
         BAL   RLINK,GETBYTE       Get next input byte.                 02324000
         BNZ   CRNHPUTL                                                 02325000
         LR    R5,R1                                                    02326000
         B     CRNHLOOP                                                 02327000
CRNHPUT  DS    0H                                                       02328000
         LR    R1,R4                                                    02329000
         LA    R0,WRKLZWTB                                              02330000
         SR    R1,R0                                                    02331000
         SRL   R1,4                                                     02332000
         BAL   RLINK,PUTCODE       Output the predecessor.              02333000
         L     R4,=F'-1'           Reset predecessor to nil.            02334000
         B     CRNHLOOP                                                 02335000
CRNHPUTL DS    0H                                                       02336000
         LR    R1,R4                                                    02337000
         LA    R0,WRKLZWTB                                              02338000
         SR    R1,R0                                                    02339000
         SRL   R1,4                                                     02340000
         BAL   RLINK,PUTCODE       Output the final code.               02341000
CRNHDONE DS    0H                                                       02342000
         LA    R1,KODENDR          Indicate end of file.                02343000
         BAL   RLINK,PUTCODE       Output the predecessor.              02344000
         BAL   RLINK,PUTFLUSH      Force out final buffer.              02345000
         B     LZWEXIT                                                  02346000
         EJECT                                                          02347000
*********************************************************************** 02348000
UNPKLZW  DS    0H *                                                   * 02349000
*******************     LZW Decompression.                            * 02350000
*                                                                     * 02351000
*********************************************************************** 02352000
         BAL   RLINK,LZWINIT       Initialize string table.             02353000
*********************************************************************** 02354000
*                                                                     * 02355000
*              MAIN LZW DECOMPRESSION LOOP.                           * 02356000
*                                                                     * 02357000
*********************************************************************** 02358000
         L     R7,WRKTABST         Harmless place to overlay.           02359000
*                                                                       02360000
USGETNXT DS    0H                                                       02361000
         BAL   RLINK,GETCODE       Get next input code.                 02362000
         SLL   R1,4                                                     02363000
         LA    R6,WRKLZWTB(R1)     Convert to LZW table entry.          02364000
         USING LZWDSECT,R6                                              02365000
         SR    R5,R5                                                    02366000
USDOWNLP DS    0H                                                       02367000
         L     R4,LZWPRED          Follow the predecessor chain.        02368000
         ST    R5,LZWPRED          Remember path back up.               02369000
         LR    R5,R6                                                    02370000
         LTR   R6,R4                                                    02371000
         BP    USDOWNLP                                                 02372000
         DROP  R6                                                       02373000
         USING LZWDSECT,R5                                              02374000
         MVC   LZWCHAR-LZWDSECT(L'LZWCHAR,R7),LZWCHAR                   02375000
USUPLP   DS    0H                                                       02376000
         LH    R1,LZWCHAR                                               02377000
         BAL   RLINK,PUTBYTE                                            02378000
         BNZ   LZWEXIT             --endfile exit.                      02379000
         L     R4,LZWPRED          Follow chain back up.                02380000
         ST    R6,LZWPRED          Restore downward path.               02381000
         LR    R6,R5                                                    02382000
         LTR   R5,R4                                                    02383000
         BP    USUPLP                                                   02384000
         DROP  R5                                                       02385000
*                                                                       02386000
*  Start building follow-on entry for this code.                        02387000
USMAKE   DS    0H                                                       02388000
         USING LZWDSECT,R6                                              02389000
         LH    R1,LZWREFKT         Increment reference counter.         02390000
         LA    R1,1(,R1)                                                02391000
         STH   R1,LZWREFKT                                              02392000
         DROP  R6                                                       02393000
         L     R7,WRKTABLE                                              02394000
USADDLP  DS    0H                                                       02395000
         LA    R7,LZWDLEN(,R7)     Candidate for follow-on entry.       02396000
         C     R7,WRKTABLM         Test for off end of table.           02397000
         BH    USADDLP2                                                 02398000
         USING LZWDSECT,R7                                              02399000
         OC    LZWREFKT,LZWREFKT   An unreferenced entry?               02400000
         BNZ   USADDLP             --no, try next entry.                02401000
         B     USADD                                                    02402000
USADDLP2 DS    0H                                                       02403000
         L     R7,WRKTABST                                              02404000
USADDLP3 DS    0H                                                       02405000
         OC    LZWREFKT,LZWREFKT   An unreferenced entry?               02406000
         BZ    USADD               --Yes, replace it.                   02407000
         LA    R7,LZWDLEN(,R7)     Candidate for follow-on entry.       02408000
         C     R7,WRKTABLM         Test for off end of table.           02409000
         BNH   USADDLP3                                                 02410000
*********************************************************************** 02411000
* The only way to get here is the extremely unlikely event that there * 02412000
* are no unreferenced entries.  This can only occur if the table      * 02413000
* consists entirely of the atomics plus a very long chain of strings  * 02414000
* all derived from each other.  (A string of 14 million blanks could  * 02415000
* cause this to happen!)  If it ever does, we simply forget about     * 02416000
* adding the new string to the table.                                 * 02417000
*********************************************************************** 02418000
         LH    R1,LZWREFKT-LZWDSECT(,R6)                                02419000
         BCTR  R1,0                                                     02420000
         STH   R1,LZWREFKT-LZWDSECT(,R6)                                02421000
         B     USGETNXT                                                 02422000
USADD    DS    0H                                                       02423000
         L     R1,LZWPRED                                               02424000
         LTR   R1,R1               Is there a real predecessor?         02425000
         BNP   USADDSET                                                 02426000
         LH    R0,LZWREFKT-LZWDSECT(,R1)                                02427000
         BCTR  R0,0                                                     02428000
         STH   R0,LZWREFKT-LZWDSECT(,R1)                                02429000
USADDSET DS    0H                                                       02430000
         ST    R7,WRKTABLE                                              02431000
         ST    R6,LZWPRED          Predecessor is current code.         02432000
         DROP  R7                                                       02433000
         B     USGETNXT                                                 02434000
         EJECT                                                          02435000
*********************************************************************** 02436000
*              LZW string table initialization.                       * 02437000
*********************************************************************** 02438000
LZWINIT  DS    0H                                                       02439000
         ST    RLINK,WRKLINK       Save way home.                       02440000
         LR    R14,R13             Base address of workarea.            02441000
         A     R14,=A(WRKHSHTB-WRKDSECT)                                02442000
         ST    R14,WRKHSHPT        Set pointer to LZW hash table.       02443000
         LA    R0,WRKLZWTB                                              02444000
         L     R1,=A(LZWDLEN*4097)                                      02445000
         SR    R15,R15                                                  02446000
         MVCL  R0,R14                                                   02447000
*                                                                       02448000
*  Initialize the hashing table.                                        02449000
         L     R2,WRKHSHPT         Origin of hash table.                02450000
         LA    R0,8                Size of hash table entry.            02451000
         L     R1,=A(HSHTBLEN-1)   Length of entire table - 1.          02452000
         AR    R1,R2                                                    02453000
PSINITHT DS    0H                                                       02454000
         ST    R2,0(,R2)           Set right link.                      02455000
         ST    R2,4(,R2)           Set left link.                       02456000
         BXLE  R2,R0,PSINITHT      Repeat for entire hash table.        02457000
*                                                                       02458000
*  Preload the specials plus 256 EBCDIC characters.                     02459000
         LA    R1,WRKLZWTB-LZWDLEN                                      02460000
         ST    R1,WRKTABLE         Table has zero entries.              02461000
         A     R1,=A(LZWDLEN*4096)                                      02462000
         ST    R1,WRKTABLM         Upper limit on table.                02463000
         LA    R6,KODMAX+1         Loop counter.                        02464000
         L     R4,=F'-1'           Prefix for all preloaded entires.    02465000
         SR    R5,R5               First code to be added.              02466000
INITLOOP DS    0H                                                       02467000
         BAL   RLINK,LOOKUP        (LOOKUP will add the entry.)         02468000
         USING LZWDSECT,R1                                              02469000
         MVC   LZWREFKT,=H'1'      All atomic entries are referenced.   02470000
         LA    R5,1(,R5)           Advance to next code.                02471000
         BCT   R6,INITLOOP                                              02472000
         LA    R1,LZWDLEN(,R1)                                          02473000
         ST    R1,WRKTABST         Wrap-around point.                   02474000
         DROP  R1                                                       02475000
         L     RLINK,WRKLINK       Recover way home.                    02476000
         BR    RLINK                                                    02477000
*********************************************************************** 02478000
*                       String table lookup routine.                  * 02479000
*********************************************************************** 02480000
*  R4 = table entry for last predecessor.                               02481000
*  R5 = next input character.                                           02482000
LOOKUP   DS    0H                                                       02483000
         LR    R1,R4               Hash function.                       02484000
         SRL   R1,3                ..                                   02485000
         XR    R1,R5               ..                                   02486000
         N     R1,=A(X'FFFF')      ..                                   02487000
         MR    R0,R1               ..                                   02488000
         D     R0,=A(HSHTBLEN/8)   ..                                   02489000
         SLL   R0,3                Convert each to hash table offset.   02490000
         A     R0,WRKHSHPT         Get address of hash table.           02491000
*                                                                       02492000
*  Search hash table for <predecessor,character> combination.           02493000
*                                                                       02494000
         LR    R1,R0                                                    02495000
         LR    R2,R1               Remember hash bucket origin.         02496000
         USING LZWDSECT,R1                                              02497000
LULOOP   DS    0H                                                       02498000
         L     R1,LZWLINKR         Follow hash bucket chain.            02499000
         CR    R1,R2               No more?                             02500000
         BE    LUFAIL                                                   02501000
         C     R4,LZWPRED          Same predecessor?                    02502000
         BNE   LULOOP                                                   02503000
         CH    R5,LZWCHAR          Same suffix character?               02504000
         BNE   LULOOP                                                   02505000
         CR    RLINK,RLINK         Force zero condition code.           02506000
         BR    RLINK               Return to caller.                    02507000
*                                                                       02508000
*  Desired entry not found.  Add it if possible.                        02509000
*                                                                       02510000
LUFAIL   DS    0H                                                       02511000
         LTR   R4,R4               Is there a real prefix string?       02512000
         BNP   LUFSTART                                                 02513000
         LA    R0,1                                                     02514000
         AH    R0,LZWREFKT-LZWDSECT(,R4)                                02515000
         STH   R0,LZWREFKT-LZWDSECT(,R4)                                02516000
LUFSTART DS    0H                                                       02517000
         L     R1,WRKTABLE         Last entry made.                     02518000
LUFADDLP DS    0H                                                       02519000
         LA    R1,LZWDLEN(,R1)     Next place to try.                   02520000
         C     R1,WRKTABLM         Off end of string table?             02521000
         BH    LUFADDL2                                                 02522000
         USING LZWDSECT,R1                                              02523000
         OC    LZWREFKT,LZWREFKT   Unreferenced entry?                  02524000
         BNZ   LUFADDLP                                                 02525000
         B     LUFADD                                                   02526000
LUFADDL2 DS    0H                                                       02527000
         L     R1,WRKTABST         Wrap to beginning.                   02528000
LUFADDL3 DS    0H                                                       02529000
         OC    LZWREFKT,LZWREFKT   Unreferenced entry?                  02530000
         BZ    LUFADD                                                   02531000
         LA    R1,LZWDLEN(,R1)     Next place to try.                   02532000
         C     R1,WRKTABLM         Off end of string table?             02533000
         BNH   LUFADDL3                                                 02534000
*********************************************************************** 02535000
* The only way to get here is the extremely unlikely event that there * 02536000
* are no unreferenced entries.  This can only occur if the table      * 02537000
* consists entirely of the atomics plus a very long chain of strings  * 02538000
* all derived from each other.  (A string of 14 million blanks could  * 02539000
* cause this to happen!)  If it ever does, we simply forget about     * 02540000
* adding the new string to the table.                                 * 02541000
*********************************************************************** 02542000
         LH    R1,LZWREFKT-LZWDSECT(,R4)                                02543000
         BCTR  R1,0                                                     02544000
         STH   R1,LZWREFKT-LZWDSECT(,R4)                                02545000
         LTR   RLINK,RLINK         Set failure condition code.          02546000
         BR    RLINK                                                    02547000
LUFADD   DS    0H                                                       02548000
         LM    R14,R15,LZWLINKR    Find neighbors.                      02549000
         LTR   R14,R14             Make sure there really are some.     02550000
         BNP   LUFMAKE                                                  02551000
         ST    R14,LZWLINKR-LZWDSECT(,R15)  Remove from hash chain.     02552000
         ST    R15,LZWLINKL-LZWDSECT(,R14)  ..                          02553000
         L     R14,LZWPRED         Find prefix string.                  02554000
         LTR   R14,R14             Make sure there really are some.     02555000
         BNP   LUFMAKE                                                  02556000
         LH    R0,LZWREFKT-LZWDSECT(,R14)  Update reference counter.    02557000
         BCTR  R0,0                        ..                           02558000
         STH   R0,LZWREFKT-LZWDSECT(,R14)  ..                           02559000
LUFMAKE  DS    0H                                                       02560000
         ST    R1,WRKTABLE         Remember last entry made.            02561000
         ST    R4,LZWPRED          Set prefix string pointer.           02562000
         STH   R5,LZWCHAR          Set suffix character.                02563000
         XC    LZWREFKT,LZWREFKT   Set reference counter.               02564000
         L     R15,LZWLINKR-LZWDSECT(,R2)  Front of hash chain.         02565000
         ST    R15,LZWLINKR                ..                           02566000
         ST    R2,LZWLINKL                 ..                           02567000
         ST    R1,LZWLINKR-LZWDSECT(,R2)   ..                           02568000
         ST    R1,LZWLINKL-LZWDSECT(,R15)  ..                           02569000
LUFEXIT  DS    0H                                                       02570000
         LTR   RLINK,RLINK         Set failure condition code.          02571000
         BR    RLINK                                                    02572000
         DROP  R1                                                       02573000
         TITLE '--  Global auxiliary routines'                          02574000
*********************************************************************** 02575000
*                                                                     * 02576000
*                       Shared routines.                              * 02577000
*                                                                     * 02578000
*  All of the routines in this section execute under the base         * 02579000
*  register of the main routine.  The are accessible to all of the    * 02580000
*  other subroutines in this program.                                 * 02581000
*                                                                     * 02582000
*********************************************************************** 02583000
VMARC    CSECT                                                        * 02584000
*********************************************************************** 02585000
*                                                                     * 02586000
*                       Byte Input Routine.                           * 02587000
*                                                                     * 02588000
*********************************************************************** 02589000
GETBYTE  DS    0H                                                       02590000
         TM    WRKFLAGB,WRKBENDI   End-file detected already?           02591000
         BNZ   GBENDF                                                   02592000
         L     R15,WRKNDXIN        Index into input buffer.             02593000
         CL    R15,WRKIBLEN        Do we need another record?           02594000
         BE    GBTESTV             --We are at end-of-record.           02595000
         BNL   GBREAD              --We are past end-of-record.         02596000
GBIC     DS    0H                                                       02597000
         L     R14,WRKIBUFF        Get buffer address.                  02598000
         SR    R1,R1                                                    02599000
         IC    R1,0(R15,R14)       Pick up next character.              02600000
         LA    R1,KODEBCD(,R1)     Convert EBCDIC to code.              02601000
         LA    R15,1(,R15)         Update index for next time.          02602000
         ST    R15,WRKNDXIN        ..                                   02603000
         CR    RLINK,RLINK         Force zero condition code.           02604000
         BR    RLINK                                                    02605000
*                                                                       02606000
*  At end-of-record, maybe return end-of-record code.                   02607000
*                                                                       02608000
GBTESTV  DS    0H                                                       02609000
         TM    WRKFLAGA,WRKAFIXI   Variable length records?             02610000
         BO    GBREAD              --No, record mark not needed.        02611000
         LA    R15,1(,R15)         Bump index so next time..            02612000
         ST    R15,WRKNDXIN        ..we read another record.            02613000
         LA    R1,KODENDR          Must send end-of-record code.        02614000
         CR    RLINK,RLINK         Force zero condition code.           02615000
         BR    RLINK                                                    02616000
*                                                                       02617000
*  Fetch next input record.                                             02618000
GBREAD   DS    0H                                                       02619000
         ST    RLINK,WRKLINK       Remember way home.                   02620000
         BAL   RLINK,GETRECRD      Call input subroutine.               02621000
         L     RLINK,WRKLINK       Recover way home.                    02622000
         BNZ   GBENDF                                                   02623000
         SR    R15,R15             Reset buffer index.                  02624000
         B     GBIC                Go get 1st character.                02625000
GBENDF   DS    0H                                                       02626000
         L     R1,=F'-1'           End-file code.                       02627000
         LTR   RLINK,RLINK         Set non-zero condition code.         02628000
         BR    RLINK                                                    02629000
*********************************************************************** 02630000
*                                                                     * 02631000
*                       Code output routine.                          * 02632000
*                                                                     * 02633000
*********************************************************************** 02634000
PUTCODE  DS    0H                                                       02635000
         TM    WRKFLAGB,WRKBRESD   Any residual bits from before?       02636000
         BO    PCRESID             --yes, go use them.                  02637000
*                                                                       02638000
*  Output leftmost 8 bits and save remaining 4.                         02639000
         L     R15,WRKNDXOU        Index into output buffer.            02640000
         LR    R2,R1               Code to write out.                   02641000
         SLL   R2,4                Expand to 16 bits.                   02642000
         STC   R2,WRKRESID         Residual for next time.              02643000
         L     R14,WRKOBUFF        Output buffer address.               02644000
         LA    R14,0(R15,R14)                                           02645000
         STCM  R2,B'0010',0(R14)   Implant next output byte.            02646000
         LA    R15,1(,R15)                                              02647000
         C     R15,WRKOPBSZ        Test for full buffer.                02648000
         BL    PCEXITOK                                                 02649000
         ST    R15,WRKOBLEN                                             02650000
         ST    RLINK,WRKLINK       Remember way home.                   02651000
         BAL   RLINK,PUTRECRD      Call output subroutine.              02652000
         L     RLINK,WRKLINK       Recover way home.                    02653000
         SR    R15,R15             Reset buffer index.                  02654000
         B     PCEXITOK                                                 02655000
*                                                                       02656000
*  Output previous 4 plus our 12 bits.                                  02657000
PCRESID  DS    0H                                                       02658000
         SR    R2,R2                                                    02659000
         ICM   R2,B'0010',WRKRESID Residual from before.                02660000
         OR    R2,R1               Combine with current code word.      02661000
         L     R15,WRKNDXOU        Index into output buffer.            02662000
         L     R14,WRKOBUFF        Output buffer.                       02663000
         LA    R14,0(R15,R14)                                           02664000
         STCM  R2,B'0010',0(R14)   Implant next output byte.            02665000
         LA    R15,1(,R15)                                              02666000
         C     R15,WRKOPBSZ        Test for full buffer.                02667000
         BL    PCPUT2ND                                                 02668000
         ST    R15,WRKOBLEN                                             02669000
         ST    RLINK,WRKLINK       Remember way home.                   02670000
         BAL   RLINK,PUTRECRD      Call output subroutine.              02671000
         L     RLINK,WRKLINK       Recover way home.                    02672000
         SR    R15,R15                                                  02673000
PCPUT2ND DS    0H                                                       02674000
         L     R14,WRKOBUFF        Output buffer address.               02675000
         STC   R2,0(R15,R14)       Implant second output byte.          02676000
         LA    R15,1(,R15)                                              02677000
         C     R15,WRKOPBSZ        Test for full buffer.                02678000
         BL    PCEXITOK                                                 02679000
         ST    R15,WRKOBLEN                                             02680000
         ST    RLINK,WRKLINK       Remember way home.                   02681000
         BAL   RLINK,PUTRECRD      Call output subroutine.              02682000
         L     RLINK,WRKLINK       Recover way home.                    02683000
         SR    R15,R15                                                  02684000
PCEXITOK DS    0H                                                       02685000
         ST    R15,WRKNDXOU        Index into output buffer.            02686000
         XI    WRKFLAGB,WRKBRESD   Reverse residual bits indicator.     02687000
         CR    RLINK,RLINK         Set normal condition code.           02688000
         BR    RLINK                                                    02689000
*                                                                       02690000
PUTFLUSH DS    0H                                                       02691000
         L     R0,WRKOBUFF         Address of output buffer.            02692000
         L     R15,WRKNDXOU        Current index.                       02693000
         TM    WRKFLAGB,WRKBRESD   Do we have unplaced bits?            02694000
         BO    PFCLEAR             --yes.                               02695000
         LTR   R15,R15             Empty record?                        02696000
         BZ    PFEXIT              --yes, quietly exit.                 02697000
PFCLEAR  DS    0H                                                       02698000
         AR    R0,R15                                                   02699000
         L     R1,WRKOPBSZ         Total length of buffer.              02700000
         ST    R1,WRKOBLEN                                              02701000
         SR    R1,R15              Remaining length.                    02702000
         SR    R15,R15                                                  02703000
         MVCL  R0,R14              Zero balance of buffer.              02704000
         ST    RLINK,WRKLINK       Remember way home.                   02705000
         BAL   RLINK,PUTRECRD      Call output routine.                 02706000
         L     RLINK,WRKLINK       Recover way home.                    02707000
PFEXIT   DS    0H                                                       02708000
         LTR   RLINK,RLINK         Set condition code ^= 0.             02709000
         BR    RLINK                                                    02710000
*********************************************************************** 02711000
*                                                                     * 02712000
*                       Byte output routine                           * 02713000
*                                                                     * 02714000
*********************************************************************** 02715000
PUTBYTE  DS    0H                                                       02716000
         LR    R2,R1                                                    02717000
         S     R2,=A(KODEBCD)      Unbias EBCDIC values.                02718000
         BM    PBSPCODE            Handle special codes separately.     02719000
         L     R15,WRKNDXOU        Output buffer index.                 02720000
         C     R15,WRKOPBSZ        Is output buffer full?               02721000
         BL    PBSTC               --no.                                02722000
         ST    R15,WRKOBLEN        Set record length in plist.          02723000
         ST    RLINK,WRKLINK       Remember way home.                   02724000
         BAL   RLINK,PUTRECRD      Call output subroutine.              02725000
         L     RLINK,WRKLINK       Recover way home.                    02726000
         SR    R15,R15             Reset buffer index.                  02727000
PBSTC    DS    0H                                                       02728000
         L     R14,WRKOBUFF        Address of output buffer.            02729000
         STC   R2,0(R15,R14)       Implant character in buffer.         02730000
         LA    R15,1(,R15)         Advance buffer index.                02731000
         ST    R15,WRKNDXOU        Save updated buffer index.           02732000
         CR    RLINK,RLINK         Set normal condition code.           02733000
         BR    RLINK               ..and return.                        02734000
PBSPCODE DS    0H                                                       02735000
         MVC   WRKOBLEN,WRKNDXOU   Place record size in plist           02736000
         XC    WRKNDXOU,WRKNDXOU   Reset buffer index.                  02737000
         ST    RLINK,WRKLINK       Remember way home.                   02738000
         BAL   RLINK,PUTRECRD      Output record.                       02739000
         L     RLINK,WRKLINK       Recover way home.                    02740000
         BNZR  RLINK               CC ^= 0 -> endfile.                  02741000
         TM    WRKFLAGA,WRKAFIXO   Is special a record sep?             02742000
         BO    PBEOF               RECFM=F means endfile.               02743000
         CR    RLINK,RLINK         RECFM=V means normal.                02744000
         BR    RLINK               CC =  0 -> record separator.         02745000
PBEOF    DS    0H                                                       02746000
         LTR   RLINK,RLINK                                              02747000
         BR    RLINK               CC ^= 0 -> end-file.                 02748000
*********************************************************************** 02749000
*                                                                     * 02750000
*                       Code input routine.                           * 02751000
*                                                                     * 02752000
*********************************************************************** 02753000
GETCODE  DS    0H                                                       02754000
         L     R15,WRKNDXIN        Index into input buffer.             02755000
         C     R15,WRKIBLEN        Still within last record?            02756000
         BL    GCIC                --yes.                               02757000
         ST    RLINK,WRKLINK       Remember way home.                   02758000
         BAL   RLINK,GETRECRD      Call subroutine for next record.     02759000
         L     RLINK,WRKLINK       Recover way home.                    02760000
         BNZR  RLINK               Return on end-file.                  02761000
         SR    R15,R15             Reset buffer index.                  02762000
GCIC     DS    0H                                                       02763000
         L     R14,WRKIBUFF        Address of input buffer.             02764000
         SR    R1,R1                                                    02765000
         IC    R1,0(R15,R14)       Get next input byte.                 02766000
         LA    R15,1(,R15)         Advance buffer index.                02767000
         TM    WRKFLAGB,WRKBRESD   Any residual bits from before?       02768000
         BZ    GCTWO               --no, we need another byte.          02769000
         ICM   R1,B'0010',WRKRESID  Get residual bits from before.      02770000
         N     R1,=A(X'FFF')       A code is just 12-bits.              02771000
         B     GCEXIT                                                   02772000
*                                                                       02773000
*  No residual bits are available.                                      02774000
GCTWO    DS    0H                                                       02775000
         LR    R2,R1               Protect first 8 bits.                02776000
         C     R15,WRKIBLEN        Still within record?                 02777000
         BL    GCIC2               --yes.                               02778000
         ST    RLINK,WRKLINK       Remember way home.                   02779000
         BAL   RLINK,GETRECRD      Get another input record.            02780000
         L     RLINK,WRKLINK       Recover way home.                    02781000
         BNZR  RLINK               Return on end-file.                  02782000
         SR    R15,R15                                                  02783000
         L     R14,WRKIBUFF        Address of input buffer.             02784000
GCIC2    DS    0H                                                       02785000
         SR    R1,R1                                                    02786000
         IC    R1,0(R15,R14)       Get next input byte.                 02787000
         LA    R15,1(,R15)         Advance buffer index.                02788000
         STC   R1,WRKRESID         Save part of it for next time.       02789000
         SLL   R2,8                                                     02790000
         OR    R1,R2                                                    02791000
         SRL   R1,4                Isolate just the 12 bits we need.    02792000
*                                                                       02793000
GCEXIT   DS    0H                                                       02794000
         ST    R15,WRKNDXIN        Save updated buffer index.           02795000
         XI    WRKFLAGB,WRKBRESD   Reverse residual bits indicator.     02796000
         CR    RLINK,RLINK         Set normal condition code.           02797000
         BR    RLINK               ..and return.                        02798000
*********************************************************************** 02799000
*                                                                     * 02800000
*                       Get next input record.                        * 02801000
*                                                                     * 02802000
*********************************************************************** 02803000
GETRECRD DS    0H                                                       02804000
         TM    WRKFLAGB,WRKBENDI   End-file already detected?           02805000
         BNZR  RLINK               If so, just return.                  02806000
         LA    R1,WRKIPLST         Input plist.                         02807000
         TM    WRKOPTN2,WRK2DEVI   Input from a device?                 02808000
         BZ    GRDISK              --no, read disk file.                02809000
         TM    WRKOPTN2,WRK2TAPE   Tape input?                          02810000
         BO    GRTAPE              --yes.                               02811000
         B     GRRDR               --no, must be reader.                02812000
*                                                                       02813000
*  Issue FSREAD call.                                                   02814000
GRDISK   DS    0H                                                       02815000
         SVC   202                 = FSREAD.                            02816000
         DC    AL4(GRERROR)        Goto GRERROR on error.               02817000
         L     R0,WRKIPRLN         Number of bytes actually read.       02818000
         B     GRDONE                                                   02819000
*                                                                       02820000
*  Issue TAPEIO call.                                                   02821000
GRTAPE   DS    0H                                                       02822000
         SVC   202                 = TAPEIO.                            02823000
         DC    AL4(GRERRTAP)       Goto GRERRTAP on error.              02824000
         L     R0,WRKIPTLN         Number of bytes read.                02825000
         B     GRDONE                                                   02826000
*                                                                       02827000
*  Issue RDCARD call.                                                   02828000
GRRDR    DS    0H                                                       02829000
         SVC   202                 = CARDRD.                            02830000
         DC    AL4(*+4)                                                 02831000
         CH    R15,=H'5'           We expect mismatch lrecl.            02832000
         BNE   GRERROR             If not, it is an error.              02833000
         LH    R0,WRKIPCAL         Number of bytes read.                02834000
*                                                                       02835000
GRDONE   DS    0H                                                       02836000
         ST    R0,WRKIBLEN         Put length in common place.          02837000
         A     R0,WRKKODIN         Update input byte counter.           02838000
         ST    R0,WRKKODIN         ..                                   02839000
         CR    RLINK,RLINK         Set normal condition code.           02840000
         BR    RLINK               ..and return.                        02841000
         SPACE ,                                                        02842000
GRERRTAP DS    0H                                                       02843000
         CH    R15,=H'2'           End-file from TAPEIO?                02844000
         BE    GRENDP              --yes.                               02845000
         B     ERRGET              --no, something more serious.        02846000
GRERROR  DS    0H                                                       02847000
         CH    R15,=H'12'          End-file from FSREAD?                02848000
         BE    GRENDP              --yes.                               02849000
         CH    R15,=H'1'           End-file from RDCARD?                02850000
         BNE   ERRGET              --no, something more serious.        02851000
GRENDP   DS    0H                                                       02852000
         OI    WRKFLAGB,WRKBENDI   Indicate real end-file.              02853000
         LTR   RLINK,RLINK         Set non-zero condition code.         02854000
         BR    RLINK               ..and return.                        02855000
ERRGET   DS    0H                                                       02856000
         LR    R3,R15                                                   02857000
         LINEDIT TEXT='Unexpected error during input.  RC=..',         X02858000
               SUB=(DEC,(R3))                                           02859000
         LR    R15,R3                                                   02860000
         B     VMAEXIT                                                  02861000
*********************************************************************** 02862000
*                                                                     * 02863000
*              Put next output record.                                * 02864000
*                                                                     * 02865000
*********************************************************************** 02866000
PUTRECRD DS    0H                                                       02867000
         L     R0,WRKOBLEN         Number of bytes to write.            02868000
         LTR   R0,R0               If byte count = 0..                  02869000
         BZ    PRENDF              ..then we are at endfile.            02870000
         TM    WRKOPTN2,WRK2DEVO   Device output?                       02871000
         BO    PRWRITE             --yes, length is fixed.              02872000
         ST    R0,WRKOPBLN         Set length for FSWRITE.              02873000
PRWRITE  DS    0H                                                       02874000
         A     R0,WRKKODOU         Update output byte counter.          02875000
         ST    R0,WRKKODOU         ..                                   02876000
         LA    R1,WRKOPLST         Output plist.                        02877000
         SVC   202                 WRBUF, TAPEIO, CARDPH, or PRINTR.    02878000
         DC    AL4(ERRPUT)         Goto ERRPUT on error.                02879000
         CR    RLINK,RLINK         Set normal condition code.           02880000
         BR    RLINK               ..and return.                        02881000
PRENDF   DS    0H                                                       02882000
         OI    WRKFLAGB,WRKBENDO   Record end-file status.              02883000
         LTR   RLINK,RLINK         Set endfile condition code.          02884000
         BR    RLINK               ..and return.                        02885000
ERRPUT   DS    0H                                                       02886000
         LR    R3,R15                                                   02887000
         LINEDIT TEXT='Unexpected error during output.  RC=..',        X02888000
               SUB=(DEC,(R3))                                           02889000
         LR    R15,R3                                                   02890000
         B     VMAEXIT                                                  02891000
         EJECT ,                                                        02892000
*********************************************************************** 02893000
WILD     DS    0H *                                                   * 02894000
*******************     Wild-card pattern matcher.                    * 02895000
*                                                                     * 02896000
*  Notice:  This routine is an adaptation of the CMSWILD              * 02897000
*  routine included in the CMS Kermit distribution (assembler         * 02898000
*  language version).  Therefore, it is governed by the               * 02899000
*  following notice of copyright:                                     * 02900000
*                                                                     * 02901000
*     "Carl Kass and Jeff Damens, CUCCA User Services, 12/80          * 02902000
*      Copyright (C) 1980 Columbia University                         * 02903000
*      Permission is granted to any individual or institution         * 02904000
*      to copy or use this program, except for explicitly             * 02905000
*      commercial purposes."                                          * 02906000
*                                                                     * 02907000
*********************************************************************** 02908000
         STM   14,12,12(13)        Save caller's registers.             02909000
         LA    R1,WRKTSTID         Start of source strings.             02910000
         LA    R2,WRKPATID         Start of pattern strings.            02911000
         LA    R3,2                Loop two times.                      02912000
*********************************************************************** 02913000
*        R1 -> subject string.                                        * 02914000
*        R2 -> pattern string.                                        * 02915000
*********************************************************************** 02916000
WLDAGAIN DS    0H                                                       02917000
         LR    R6,R1               Address of subject string.           02918000
         LA    R7,8(,R1)           End of subject string + 1            02919000
WLDTRIM1 DS    0H                                                       02920000
         BCTR  R7,0                Back up through string.              02921000
         CLI   0(R7),X'40'         Trailing blank?                      02922000
         BE    WLDTRIM1            --yep, keep on trimming.             02923000
         SR    R7,R6               Length - 1 of string.                02924000
         LA    R7,1(,R7)                                                02925000
*                                                                       02926000
         LR    R4,R2               Address of pattern string.           02927000
         LA    R5,8(,R2)           End of pattern string + 1            02928000
WLDTRIM2 DS    0H                                                       02929000
         BCTR  R5,0                Back up through string.              02930000
         CLI   0(R5),X'40'         Trailing blank?                      02931000
         BE    WLDTRIM2            --yep, keep on trimming.             02932000
         SR    R5,R4               Length - 1 of string.                02933000
         LA    R5,1(,R5)                                                02934000
*                                                                       02935000
         NI    WRKFLAGA,X'FF'-WRKASTAR   No arbchar yet.                02936000
         ICM   R7,B'1000',=AL1(ARBCHAR)  Fill char.                     02937000
*                                                                       02938000
WLDCOMP  DS    0H                                                       02939000
         CLCL  R4,R6               Compare pattern with string.         02940000
         BE    WLDPASS             --They match.                        02941000
*********************************************************************** 02942000
*     Strings don't match, so examine offending pattern character.    * 02943000
*     If not a special character and we haven't seen any arbs yet,    * 02944000
*     all we can do is fail.  If it's the len1 character, we just     * 02945000
*     skip it; if it's the arb character, we skip it and remember     * 02946000
*     we've seen it.  Otherwise, back up to one past the last arb     * 02947000
*     character and try again.                                        * 02948000
*********************************************************************** 02949000
         CLI   0(R4),LEN1CHAR      Stop on % pattern character?         02950000
         BE    WLDLEN1             --yes, advance one.                  02951000
         CLI   0(R4),ARBCHAR       Stop on * pattern character?         02952000
         BE    WLDARB              --yes.                               02953000
         TM    WRKFLAGA,WRKASTAR   Have we seen an * already?           02954000
         BZ    WLDFAIL             --no, match fails.                   02955000
         CLM   R7,B'0111',=XL3'000000'  Is string exhausted?            02956000
         BE    WLDFAIL             --yes, match fails.                  02957000
         LM    R4,R7,PATADDR       Restore previous * place.            02958000
         LA    R6,1(R6)            Try advancing one in string.         02959000
         BCTR  R7,0                ..                                   02960000
         STM   R6,R7,PATADDR+8     Remember where we are.               02961000
         B     WLDCOMP             ..and go compare again.              02962000
*                                                                       02963000
*  Advance one position in source string for LEN1 match.                02964000
*                                                                       02965000
WLDLEN1  DS    0H                                                       02966000
         LA    R4,1(R4)            Advance pattern past %.              02967000
         BCTR  R5,0                ..                                   02968000
         LA    R6,1(R6)            Advance one in string.               02969000
         BCTR  R7,0                ..                                   02970000
         LA    R0,0(,R7)           Extract length remaining.            02971000
         LTR   R0,R0               Anything remaining?                  02972000
         BP    WLDCOMP             --yes.                               02973000
         LTR   R5,R5               Pattern used up, too?                02974000
         BZ    WLDPASS             --yes, a perfect match.              02975000
         CLI   0(R4),ARBCHAR       Trailing *?                          02976000
         BE    WLDCOMP             --yes, that's OK.                    02977000
         B     WLDFAIL             --no, match fails.                   02978000
WLDARB   DS    0H                                                       02979000
*********************************************************************** 02980000
*     If the pattern ends in arb, then it will match anything,        * 02981000
*     so GOTARB should not return to COMPRE if the pattern is         * 02982000
*     now exhausted.                                                  * 02983000
*********************************************************************** 02984000
         OI    WRKFLAGA,WRKASTAR   Remember arb encountered.            02985000
         LA    R4,1(R4)            Advance in the pattern.              02986000
         BCTR  R5,0                ..                                   02987000
         LTR   R5,R5               Pattern exhausted?                   02988000
         BZ    WLDPASS             --yes, we have a match.              02989000
         STM   R4,R7,PATADDR       Remember where we are.               02990000
         B     WLDCOMP                                                  02991000
WLDPASS  DS    0H                                                       02992000
         LA    R1,8(,R1)           Advance to next string.              02993000
         LA    R2,8(,R2)           Advance to next pattern.             02994000
         BCT   R3,WLDAGAIN                                              02995000
*                                                                       02996000
         LM    14,12,12(13)        ..and registers.                     02997000
         CR    14,14               Indicate success.                    02998000
         BR    14                  Return to caller.                    02999000
*                                                                       03000000
WLDFAIL  DS    0H                                                       03001000
         LM    14,12,12(13)        Restore caller's registers.          03002000
         LTR   14,14               Set failure condition code.          03003000
         BR    14                  Return.                              03004000
         TITLE 'Shared data areas'                                      03005000
ENABLE   DS    X'FF'                                                    03006000
DISABLE  DS    X'00'                                                    03007000
         LTORG                                                          03008000
         TITLE 'System Control Blocks'                                  03009000
R0       EQU   0                                                        03010000
R1       EQU   1                                                        03011000
R2       EQU   2                                                        03012000
R3       EQU   3                                                        03013000
R4       EQU   4                                                        03014000
R5       EQU   5                                                        03015000
R6       EQU   6                                                        03016000
R7       EQU   7                                                        03017000
R8       EQU   8                                                        03018000
RABASE   EQU   9                   Common routines base register.       03019000
RSUBBASE EQU   10                  Tretiary program base register.      03020000
RLINK    EQU   11                  Primary return register.             03021000
RBASE    EQU   12                  Program base register.               03022000
R13      EQU   13                                                       03023000
R14      EQU   14                                                       03024000
R15      EQU   15                                                       03025000
*********************************************************************** 03026000
CMDDSECT DSECT  *                                                     * 03027000
*****************       Command table definition.                     * 03028000
*                                                                     * 03029000
*********************************************************************** 03030000
CMDKEY   DS    CL8                 Complete name of the command.        03031000
CMDMIN   DS    FL1                 Minimum abbreviation length - 1.     03032000
CMDOPTNS DS    XL3                 Default options.                     03033000
CMDALLOW DS    XL3                 Allowed options.                     03034000
CMDDLEN  EQU   *-CMDDSECT                                               03035000
*********************************************************************** 03036000
OPTDSECT DSECT  *                                                     * 03037000
*****************       Option table definition.                      * 03038000
*                                                                     * 03039000
*********************************************************************** 03040000
OPTKEY   DS    CL8                 Complete name of the keyword.        03041000
OPTMIN   DS    FL1                 Minimum abbreviation length - 1.     03042000
OPTSET   DS    XL3                 Option bits to set.                  03043000
OPTRESET DS    0XL3                Option bits to reset.                03044000
OPTFLAG  DS    X'FF'               Special option flag.                 03045000
OPTDISP  DS    FL1                 Branch index to special handler.     03046000
         DS    X                   (reserved)                           03047000
OPTALLOW DS    XL3                 Conflict bits.                       03048000
OPTDLEN  EQU   *-OPTDSECT                                               03049000
*********************************************************************** 03050000
FIDDSECT DSECT  *                                                     * 03051000
*****************       File identifier table                         * 03052000
*                                                                     * 03053000
*  If input is being read from disk, one FIDDSECT is constructed for  * 03054000
*  each file that matches the input file pattern.  (We must build     * 03055000
*  the FIDDSECT list before processing any files to avoid a problem   * 03056000
*  with files created as output from this program matching the input  * 03057000
*  pattern.)                                                          * 03058000
*                                                                     * 03059000
*********************************************************************** 03060000
FIDFIDPT DS    A                   Next FIDFIDPT or zero.               03061000
FIDID    DS    0CL18               CMS file identifier.                 03062000
FIDFN    DS    CL8                     File name.                       03063000
FIDFT    DS    CL8                     File type.                       03064000
FIDFM    DS    CL2                     File mode.                       03065000
FIDIL    DS    F                   Record length.                       03066000
FIDFV    DS    C                   Record format.                       03067000
FIDFLAG  DS    X                   File handling flags.                 03068000
FIDFLEAV EQU   B'10000000'         ..Leave output file open.            03069000
FIDADATI DS    CL6                 Time stamp, YYMMDD HHMMSS.           03070000
FIDOUTID DS    0CL18               Output file identifier.              03071000
FIDOUTFN DS    CL8                     File name.                       03072000
FIDOUTFT DS    CL8                     File type.                       03073000
FIDOUTFM DS    CL2                     File mode.                       03074000
         DS    0D                                                       03075000
FIDDLEN  EQU   *-FIDDSECT                                               03076000
*********************************************************************** 03077000
LZWDSECT DSECT  *                                                     * 03078000
*****************       String table entry for LZW compaction         * 03079000
*                                                                     * 03080000
*  In LZW compaction, character strings are represented by linked-    * 03081000
*  lists.  The LZWCHAR values encountered while following the         * 03082000
*  LZWPRED link when concatenated in reverse order yields the string  * 03083000
*  represented by a particular entry in the string table.  For        * 03084000
*  searching purposes, a chained-bucket hashing scheme is used.  The  * 03085000
*  LZWLINKR and LZWLINKL pointers form a doubly-linked-list of all    * 03086000
*  strings with the same hash.  LZWREKFT counts the number of other   * 03087000
*  strings in the table that use this string in their definition.     * 03088000
*                                                                     * 03089000
*********************************************************************** 03090000
LZWLINKR DS    A                   Hash table right link.               03091000
LZWLINKL DS    A                   Hash table left link.                03092000
LZWPRED  DS    A                   Predicessor string.                  03093000
LZWREFKT DS    H                   Number of references to this entry.  03094000
LZWCHAR  DS    H                   Character suffix.                    03095000
LZWDLEN  EQU   (*-LZWDSECT+7)/8*8                                       03096000
         DC    0AL(1000*(LZWDLEN-16)+1)(0)  LZWDLEN must be 16.         03097000
*********************************************************************** 03098000
STRDSECT DSECT  *                                                     * 03099000
*****************       String table entry for S2 compaction          * 03100000
*                                                                     * 03101000
*  For S2 data compaction, character strings are represented as       * 03102000
*  binary trees.  Each node of the tree is mapped by STRDSECT.        * 03103000
*  The string represented by a given node is defined recursively as   * 03104000
*  the concatenation of strings represented by the STRLEFT and        * 03105000
*  STRRIGHT subtrees.  Leaves of the tree have STRLEFT = 0 and        * 03106000
*  STRRIGHT overlayed by a single character code.                     * 03107000
*                                                                     * 03108000
*  The STRLEFT subtree of any string is also referred to as the       * 03109000
*  parent of the string.  All strings of the same parent are joined   * 03110000
*  by the STRSIBLG pointers.  The sibling chain is kept in order of   * 03111000
*  oldest first.  The STROFFSP field in the parent is a pointer to    * 03112000
*  the oldest offspring.                                              * 03113000
*                                                                     * 03114000
*********************************************************************** 03115000
STRLEFT  DS    A             Left substring, or zero.                   03116000
STRRIGHT DS    0A            Right substring, or zero.                  03117000
         DS    H                                                        03118000
STRCHAR  DS    H             Character, if entry is atomic.             03119000
STRSIBLG DS    A             Next string with same left substring.      03120000
STROFFSP DS    A             First string with this as left substring.  03121000
STRLEN   DS    H             Length of this string.                     03122000
STRCOUNT DS    H             Number of references to this string.       03123000
         ORG   STRDSECT+32   Convenient alignment.                      03124000
         ORG   ,                                                        03125000
STRDLEN  EQU   *-STRDSECT                                               03126000
         DC    0AL(1000*(STRDLEN-32)+1)(0)  STRDLEN must be 32.         03127000
*********************************************************************** 03128000
HEADER   DSECT  *                                                     * 03129000
*****************       Compacted file header                         * 03130000
*                                                                     * 03131000
*  HDRVERSN values:                                                   * 03132000
*                                                                     * 03133000
*        1,0   Base methods.                                          * 03134000
*        1,1   As-is storage mode.                                    * 03135000
*                                                                     * 03136000
*********************************************************************** 03137000
HDRID    DC    CL8':CFF'     "Compacted File Format" or such nonsense.  03138000
HDRVERSN DC    AL2(256*PGMVERSN+PGMRELSE)                               03139000
HDRFILED DS    CL18                Original fileid.                     03140000
HDRLRECL DS    XL2                 Original record length.              03141000
HDRADATI DS    XL6                 Original YYMMDDHHMMSS.               03142000
HDRRECFM DS    C                   Record format.                       03143000
HDRFLAGS DS    X                   Options flags.                       03144000
HDRFCOMP EQU   B'11000000'           Compaction test bits.              03145000
HDRFS2   EQU   B'10000000'           ..S2 compaction.                   03146000
HDRFASIS EQU   B'01000000'           ..No compaction used.              03147000
HDRDLEN  EQU   (*-HEADER)    Length of compacted file header.           03148000
         SPACE ,                                                        03149000
PGMVERSN EQU   1                   Program version.                     03150000
PGMRELSE EQU   2                   Program release.                     03151000
PGMPTF   EQU   1                   Program modification level.          03152000
*                                                                       03153000
*  Internally the EBCDIC codes 00 - FF are remapped to be 001 - 100.    03154000
*  Code 000 is used as the record/file endmarker.                       03155000
*                                                                       03156000
KODENDR  EQU   0                   End-of-record compaction code.       03157000
KODEBCD  EQU   1                   Origin of EBCDIC character codes.    03158000
KODMAX   EQU   KODEBCD+255         Last predefined compaction codes.    03159000
*********************************************************************** 03160000
*                                                                     * 03161000
*                                                                     * 03162000
*                                                                     * 03163000
*********************************************************************** 03164000
WRKDSECT DSECT                                                          03165000
         DS    18F                 Standard linkage save area.          03166000
WRKSUBSA DS    16F                 Internal save area.                  03167000
WRKSUBSB DS    16F                 Internal save area.                  03168000
WRKLINK  DS    F                   Save area for RLINK register.        03169000
WRKFIDPT DS    A(FIDDSECT)         Address of first FIDDSECT.           03170000
WRKDOSF  DS    X                   Save area for DOS flags.             03171000
WRKCHBA  DS    CL8                 Save area for ADT data.              03172000
WRKADTPT DS    A                   Save area for ADT address.           03173000
WRKPRMPT DS    A                   Save area for parameter pointer.     03174000
WRKMODUL DS    CL8                 Name of this module.                 03175000
WRKIDCNT DS    P'0000'             Output file counter.                 03176000
*                                                                       03177000
*                                                                       03178000
WRKHSHPT DS    A                   Address of LZW hash table.           03179000
WRKTABPT DS    A                   Address of start of string table.    03180000
WRKTABST DS    A                   Address of first reassignable entry. 03181000
WRKTABLE DS    A                   Address of last entry made.          03182000
WRKTABLM DS    A                   Address of end of string table.      03183000
WRKLSTLF DS    A                   Address of last S2 left-side used.   03184000
*                                                                       03185000
*                                                                       03186000
PATADDR  DS    A                   Place in pattern of last star.       03187000
PATOLDLN DS    F                   Length of pattern past star.         03188000
SCRADDR  DS    A                   Place in source when star seen.      03189000
SCROLDLN DS    F                   Length of source past star.          03190000
ARBCHAR  EQU   C'*'                Arbitrary match symbol.              03191000
LEN1CHAR EQU   C'%'                Length-1 match symbol.               03192000
WRKTSTID DS    0CL16               Source fileid.                       03193000
WRKTSTFN DS    CL8                 ..file name.                         03194000
WRKTSTFT DS    CL8                 ..file type.                         03195000
WRKPATID DS    0CL16               Pattern fileid.                      03196000
WRKPATFN DS    CL8                 ..file name.                         03197000
WRKPATFT DS    CL8                 ..file type.                         03198000
WRKGSTID DS    0CL18               GETFST pattern.                      03199000
WRKGSTFN DS    CL8                 ..file name.                         03200000
WRKGSTFT DS    CL8                 ..file type.                         03201000
WRKGSTFM DS    CL8                 ..file mode.                         03202000
*                                                                       03203000
*                                                                       03204000
WRKADATI DS    XL6                 File time stamp, YYMMDD,HHMMSS.      03205000
WRKNDXIN DS    F                   Index into input buffer.             03206000
WRKNDXOU DS    F                   Index into output buffer.            03207000
WRKRESID DS    X                   Residual bits from PUTCODE/GETCODE   03208000
WRKKODIN DS    F                   Counter for input bytes.             03209000
WRKKODOU DS    F                   Counter for output bytes.            03210000
WRKBLKSZ DS    F                   Block size.                          03211000
*********************************************************************** 03212000
*              Command line parameters                                * 03213000
*********************************************************************** 03214000
WRKINID  DS    0CL18         Input fileid pattern.                      03215000
WRKINFN  DS    CL8                 File name.                           03216000
WRKINFT  DS    CL8                 File type.                           03217000
WRKINFM  DS    CL2                 File mode.                           03218000
WRKOUTID DS    0CL18         Output fileid pattern.                     03219000
WRKOUTFN DS    CL8                 File name.                           03220000
WRKOUTFT DS    CL8                 File type.                           03221000
WRKOUTFM DS    CL2                 File mode.                           03222000
WRKFINID DS    0CL18         Final output fileid.                       03223000
WRKFINFN DS    CL8                 File name.                           03224000
WRKFINFT DS    CL8                 File type.                           03225000
WRKFINFM DS    CL2                 File mode.                           03226000
*********************************************************************** 03227000
*              Processing flags                                       * 03228000
*********************************************************************** 03229000
WRKFLAGS DS    0XL2                                                     03230000
WRKFLAGA DS    X             Status flags byte #1.                      03231000
WRKASAME EQU   B'10000000'         Output fileid = input fileid.        03232000
WRKASTAR EQU   B'01000000'         Star found during pattern match.     03233000
WRKA1FIL EQU   B'00100000'         At least one file processed.         03234000
WRKAOPNI EQU   B'00010000'         Input file is open.                  03235000
WRKAOPNO EQU   B'00001000'         Output file is open.                 03236000
WRKAFIXI EQU   B'00000100'         Input recfm is F.                    03237000
WRKAFIXO EQU   B'00000010'         Output recfm is F.                   03238000
WRKAHOLD EQU   B'00000001'         One or more files skipped.           03239000
WRKFLAGB DS    X             Status flags byte #2.                      03240000
WRKBENDI EQU   B'10000000'         Input file at end.                   03241000
WRKBENDO EQU   B'01000000'         Output file at end.                  03242000
WRKBERR  EQU   B'00100000'         Error occurred with current files.   03243000
WRKBSKIP EQU   B'00010000'         Member did not match pattern.        03244000
WRKBLEAV EQU   B'00000010'         Leave output file open for now.      03245000
WRKBRESD EQU   B'00000001'         Residual bits pending for next code. 03246000
*********************************************************************** 03247000
*              Options flags                                          * 03248000
*********************************************************************** 03249000
WRKOPTNS DS    0XL3                                                     03250000
WRKOPTN1 DS    X             Options flags byte #1.                     03251000
WRK1PACK EQU   B'10000000'         Compaction versus decompaction.      03252000
WRK1S2   EQU   B'01000000'         Method is S2.                        03253000
WRK1ASIS EQU   B'00100000'         Method is As-is.                     03254000
WRK1COMP EQU   WRK1S2+WRK1ASIS                                          03255000
WRK1OLDD EQU   B'00010000'         Preserve old file date.              03256000
WRK1APP  EQU   B'00001000'         Append to existing output file.      03257000
WRK1REPL EQU   B'00000100'         Replace an existing output file.     03258000
WRK1FIFO EQU   B'00000010'         Stack activity trace FIFO.           03259000
WRK1LIFO EQU   B'00000001'         Stack activity trace LIFO.           03260000
WRK1STCK EQU   WRK1FIFO+WRK1LIFO   Either stack option.                 03261000
*                                                                       03262000
WRKOPTN2 DS    X             Options flags byte #2.                     03263000
WRK2DEVI EQU   B'10000000'         Input from a device.                 03264000
WRK2DEVO EQU   B'01000000'         Output to a device.                  03265000
WRK2TAPE EQU   B'00100000'         Device is a tape drive.              03266000
WRK2PRT  EQU   B'00010000'         Device is a printer.                 03267000
WRK2BLK  EQU   B'00001000'         Output block size specified.         03268000
WRK2IGNR EQU   B'00000100'         Ignore file names.                   03269000
WRK2TRAC EQU   B'00000010'         Generate activity trace.             03270000
WRK2LIST EQU   B'00000001'         Suppress output.                     03271000
*                                                                       03272000
WRKOPTN3 DS    X             Options flags byte #3.                     03273000
WRK3HOLD EQU   B'10000000'         Unconditionally hold reader.         03274000
*                                                                       03275000
WRKALLOW DS    0XL3          Testing area for allowed options.          03276000
WRKALLO1 DS    X                   Counter-part to WRKOPTN1.            03277000
WRKALLO2 DS    X                   Counter-part to WRKOPTN2.            03278000
WRKALLO3 DS    X                   Counter-part to WRKOPTN3.            03279000
         EJECT ,                                                        03280000
*********************************************************************** 03281000
*                                                                     * 03282000
*                       Plists for CMS functions                      * 03283000
*                                                                     * 03284000
*********************************************************************** 03285000
         SPACE ,                                                        03286000
WRKOPBSZ DS    F                   Size of output buffer.               03287000
WRKOBLEN DS    F                   GETMAIN size of output buffer.       03288000
WRKOBUFL DS    F                   Current size of output record.       03289000
WRKOBUFF DS    A                   Address of output buffer.            03290000
WRKIBLEN DS    F                   GETMAIN size of input buffer.        03291000
WRKIBUFL DS    F                   Current size of input record.        03292000
WRKIBUFF DS    A                   Address of input buffer.             03293000
*********************************************************************** 03294000
WRKIPLST DS    0F            Plist for input operations.                03295000
*********************************************************************** 03296000
WRKIPCMD DS    CL8'RDBUF' OR 'CARDRD' or 'TAPEIO'                       03297000
         ORG   WRKIPLST                                                 03298000
         DS    CL8'CARDRD'   Plist for reader input.                    03299000
WRKIPCFL DS    0X'80'           Option flags.                           03300000
WRKIPCRD DS    A                Buffer address.                         03301000
WRKIPCRL DS    H                Requested length.                       03302000
WRKIPCAL DS    H                Actual length.                          03303000
         ORG   WRKIPLST                                                 03304000
         DS    CL8'TAPEIO'  Plist for tape input                        03305000
WRKIPTRD DS    CL8'READ'        Input subfunction.                      03306000
WRKIPTID DS    CL4'TAP1'        Device name.                            03307000
WRKIPTAP DS    A                Buffer address.                         03308000
WRKIPTBL DS    F                Buffer length.                          03309000
WRKIPTLN DS    F                length actually read.                   03310000
         ORG   WRKIPLST                                                 03311000
         DS    CL8'RDBUF'   Plist for disk file input.                  03312000
WRKIPID  DS    0CL18            Input file identifier.                  03313000
WRKIPFN  DS    CL8              ..filename.                             03314000
WRKIPFT  DS    CL8              ..filetype.                             03315000
WRKIPFM  DS    CL2              ..filemode.                             03316000
         DS    H'0'             reserved.                               03317000
WRKIPBPT DS    A                Buffer address.                         03318000
WRKIPBLN DS    F                Buffer length.                          03319000
WRKIPFV  DS    C                Record format.                          03320000
WRKIPEXT DS    AL1(FSTEPL)      Extended plist indicator.               03321000
         DS    H'0'             reserved.                               03322000
WRKIPRLN DS    F                Number of items read.                   03323000
WRKIPITM DS    F                Item number.                            03324000
WRKIPNIT DS    F                Number of items to read.                03325000
         ORG   ,                                                        03326000
*********************************************************************** 03327000
WRKOPLST DS    0F            Plist for output operations.               03328000
*********************************************************************** 03329000
WRKOPCMD DS    CL8'WRBUF' or 'CARDPH' or 'TAPEIO' or 'PRINTR'           03330000
         ORG   WRKOPLST                                                 03331000
         DS    CL8'CARDPH'  Plist for punch output.                     03332000
WRKOPCRD DS    A                Buffer address.                         03333000
         ORG   WRKOPLST                                                 03334000
         DS    CL8'PRINTR'  Plist for printer output.                   03335000
WRKOPPRT DS    A                Buffer address.                         03336000
WRKOPPTR DS    X'00'            TRC byte.                               03337000
WRKOPPF1 DS    X'00'  X'85'     Flag byte.                              03338000
WRKOPPLN DS    H                Line length.                            03339000
*  Following stuff would require CMS 5 or greater.                      03340000
WRKOPPF2 DS    X'04'            Flag byte.                              03341000
WRKOPPCC DS    X'09'            Carriage control byte.                  03342000
WRKOPPDV DS    X'00'            Device characteristics.                 03343000
WRKOPPBP DS    A(0)             Storage area.                           03344000
WRKOPPLC DS    H'0'             Line count.                             03345000
         DS    H'0'             reserved.                               03346000
         ORG   WRKOPLST                                                 03347000
         DS    CL8'TAPEIO'  Plist for tape output.                      03348000
WRKOPTRD DS    CL8'WRITE'       Output subfunction.                     03349000
WRKOPTID DS    CL4'TAP1'        Device name.                            03350000
WRKOPTAP DS    A                Buffer address.                         03351000
WRKOPTBL DS    F                Buffer length.                          03352000
WRKOPTLN DS    F                Length actually written.                03353000
         ORG   WRKOPLST                                                 03354000
         DS    CL8'WRBUF'   Plist for disk file output.                 03355000
WRKOPFID DS    0CL18            Output fileid.                          03356000
WRKOPFN  DS    CL8              ..filename.                             03357000
WRKOPFT  DS    CL8              ..filetype.                             03358000
WRKOPFM  DS    CL2              ..filemode.                             03359000
         DS    H'0'             reserved.                               03360000
WRKOPBPT DS    A                Buffer address.                         03361000
WRKOPBLN DS    F                Record length.                          03362000
WRKOPFV  DS    C                Record format.                          03363000
WRKOPEXT DS    AL1(FSTEPL)      Extended plist indicator.               03364000
         DS    H'0'             reserved.                               03365000
WRKOPRLN DS    F                Bumber of bytes to write.               03366000
WRKOPITM DS    F                Item number.                            03367000
WRKOPNIT DS    F                Number of items to write.               03368000
         ORG   ,                                                        03369000
*********************************************************************** 03370000
WRKRPLST DS    0D            RENAME plist.                              03371000
*********************************************************************** 03372000
WRKRPCMD DS    CL8'RENAME'                                              03373000
WRKRPID1 DS    0CL24            Original fileid.                        03374000
WRKRPFN1 DS    CL8              ..filename.                             03375000
WRKRPFT1 DS    CL8              ..filetype.                             03376000
WRKRPFM1 DS    CL8              ..filemode.                             03377000
WRKRPID2 DS    0CL24            Target fileid.                          03378000
WRKRPFN2 DS    CL8              ..filename.                             03379000
WRKRPFT2 DS    CL8              ..filetype.                             03380000
WRKRPFM2 DS    CL8              ..filemode.                             03381000
WRKRPXFF DS    8X'FF'           Fence.                                  03382000
*********************************************************************** 03383000
WRKERLST DS    0D            ERASE plist.                               03384000
*********************************************************************** 03385000
WRKERCMD DS    CL8'ERASE'                                               03386000
WRKERID  DS    0CL24            Fileid.                                 03387000
WRKERFN  DS    CL8              ..filename.                             03388000
WRKERFT  DS    CL8              ..filetype.                             03389000
WRKERFM  DS    CL8              ..filemode.                             03390000
WRKERXFF DS    8X'FF'           Fence.                                  03391000
*********************************************************************** 03392000
WRKESLST DS    0D            ESTATEW plist.                             03393000
*********************************************************************** 03394000
WRKESCMD DS    CL8'ESTATEW'                                             03395000
WRKESID  DS    0CL24            Fileid.                                 03396000
WRKESFN  DS    CL8              ..filename.                             03397000
WRKESFT  DS    CL8              ..filetype.                             03398000
WRKESFM  DS    CL2              ..filemode.                             03399000
         DS    CL2              (reserved)                              03400000
WRKESSTR DS    A or C'****'                                             03401000
WRKESXFF DS    8X'FF'           Fence.                                  03402000
*********************************************************************** 03403000
WRKAPLST DS    0D            ATTN plist                                 03404000
*********************************************************************** 03405000
WRKAPCMD DS    CL8'ATTN'                                                03406000
WRKAPDIR DS    CL4'?IFO'        Stacking direction.                     03407000
WRKAPLEN DS    0AL1             Length of line.                         03408000
WRKAPBPT DS    A(WRKATBUF+1)    Line.                                   03409000
WRKATBUF DS    AL1,CL80                                                 03410000
*********************************************************************** 03411000
WRKRDRCP DS    0D            Restore reader CP command line             03412000
*********************************************************************** 03413000
WRKRCCMD DS    C'SPOOL'                                                 03414000
WRKRCRES DS    0CL31                                                    03415000
         DS    C' 00C CL '                                              03416000
WRKRCCLS DS    C'? '            ..Class for reader.                     03417000
         DS    C                                                        03418000
WRKRCCNT DS    CL7              ..CONT or NOCONT.                       03419000
WRKRCHLD DS    CL7              ..HOLD or NOHOLD.                       03420000
WRKRCEOF DS    CL6              ..EOF  or NOEOF.                        03421000
WRKRCLEN EQU   *-WRKRDRCP                                               03422000
WRKRCSP  DS    CL4              Spool id for reader file.               03423000
WRKCPCMD DS    CL100            CP command construction area.           03424000
WRKCPANS DS    CL256            CP command response area.               03425000
*                                                                       03426000
*                                                                       03427000
WRKTBLES DS    0D                                                       03428000
WRKLZWTB DS    4096XL(LZWDLEN)  LZW string table.                       03429000
         DS    XL(LZWDLEN)      Dummy extra entry for unpack.           03430000
WRKHSHTB DS    5003XL8          LZW hash table.                         03431000
HSHTBLEN EQU   *-WRKHSHTB                                               03432000
         ORG   WRKLZWTB                                                 03433000
WRK2KBUF DS    2048H            S2 input buffer.                        03434000
WRKSTRTB DS    4096XL(STRDLEN)  S2 string table.                        03435000
WRKS2SIZ EQU   *-WRKTBLES                                               03436000
         SPACE ,                                                        03437000
         ORG   ,                                                        03438000
WRKDLEN  EQU   (*-WRKDSECT+7)/8 Length of workarea in doublewords.      03439000
*********************************************************************** 03440000
*                       File System Control Block                     * 03441000
*********************************************************************** 03442000
         FSCBD                                                          03443000
         EJECT                                                          03444000
*********************************************************************** 03445000
*                       File Status Block                             * 03446000
*********************************************************************** 03447000
         FSTB                                                           03448000
         EJECT                                                          03449000
*********************************************************************** 03450000
*                       Active Disk Table                             * 03451000
*********************************************************************** 03452000
         ADT                                                            03453000
*********************************************************************** 03454000
*                       Active File Table                             * 03455000
*********************************************************************** 03456000
         AFT                                                            03457000
*********************************************************************** 03458000
*                       CMS Nucleus Constants Area                    * 03459000
*********************************************************************** 03460000
         NUCON                                                          03461000
         END   VMARCEP                                                  03462000